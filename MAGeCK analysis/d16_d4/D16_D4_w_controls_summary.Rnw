% This is a template file for Sweave used in MAGeCK
% Author: Wei Li, Shirley Liu lab
% Do not modify lines beginning with "#__".
\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage{fullpage}
\usepackage[utf8]{inputenc}

\begin{document}
\setkeys{Gin}{width=0.9\textwidth}

\title{MAGeCK Comparison Report}
\author{Wei Li}

\maketitle


\tableofcontents

\section{Summary}

%Function definition
<<label=funcdef,include=FALSE,echo=FALSE>>=
genreporttable<-function(comparisons,ngenes,direction,fdr1,fdr5,fdr25){
  xtb=data.frame(Comparison=comparisons,Genes=ngenes,Selection=direction,FDR1=fdr1,FDR5=fdr5,FDR25=fdr25);
  colnames(xtb)=c("Comparison","Genes","Selection","FDR1%","FDR5%","FDR25%");
  return (xtb);
}
@

The statistics of comparisons is as indicated in the following table. 

<<label=tab1,echo=FALSE,results=tex>>=
library(xtable)
comparisons=c("D16-REP1,D16-REP2,D16-REP3_vs_D4-REP1,D4-REP2,D4-REP3 neg.","D16-REP1,D16-REP2,D16-REP3_vs_D4-REP1,D4-REP2,D4-REP3 pos.");
ngenes=c(1210,1210);
direction=c("negative","positive");
fdr1=c(0,180);
fdr5=c(0,235);
fdr25=c(0,294);

cptable=genreporttable(comparisons,ngenes,direction,fdr1,fdr5,fdr25);
print(xtable(cptable, caption = "Summary of comparisons", label = "tab:one",
    digits = c(0, 0, 0, 0, 0, 0, 0),
    table.placement = "tbp",
    caption.placement = "top"))
@

The meanings of the columns are as follows.

\begin{itemize}
\item \textbf{Comparison}: The label for comparisons;
\item \textbf{Genes}: The number of genes in the library;
\item \textbf{Selection}: The direction of selection, either positive selection or negative selection;
\item \textbf{FDR1\%}: The number of genes with FDR $<$ 1\%;
\item \textbf{FDR5\%}: The number of genes with FDR $<$ 5\%;
\item \textbf{FDR25\%}: The number of genes with FDR $<$ 25\%;
\end{itemize}

The following figures show:

\begin{itemize}
\item Individual sgRNA read counts of selected genes in selected samples; 
\item The distribution of RRA scores and p values of all genes; and
\item The RRA scores and p values of selected genes.
\end{itemize}


\newpage\section{Comparison results of D16-REP1,D16-REP2,D16-REP3 vs D4-REP1,D4-REP2,D4-REP3 neg.}

The following figure shows the distribution of RRA score in the comparison D16-REP1,D16-REP2,D16-REP3 vs D4-REP1,D4-REP2,D4-REP3 neg., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('D16_D4_w_controls.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("V173A","V173E","H179PfsTer2","R174W","R174R","V172A","E171G","E171Ter","V172D","V173M")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='D16-REP1,D16-REP2,D16-REP3_vs_D4-REP1,D4-REP2,D4-REP3 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(3746.5794736457206,1215.8685970943375,2329.807564638839,1154.6118014166816,811.6135793658436,943.2258938077235),c(2838.9457294771223,1018.2556422618493,1332.1284128713555,707.1391101459936,498.3159362671745,630.4284341482077),c(1939.6008779493334,1154.5719861046305,1211.953424135727,600.8918997063524,458.0230635327,748.5042964037865),c(18301.87495090653,6692.309095368758,8081.201129316615,3379.6311835281717,3017.0316339344276,3705.234367622434),c(32964.92603249785,13047.944267689572,18167.964098947636,6227.585455063782,6871.9905600408865,6835.280470572954),c(1811.123042016792,551.669498907363,815.1492160463869,233.65569100833957,165.2830085638648,310.0354511857012),c(6796.891965463476,4170.91417167275,6049.563583899194,2219.729064579226,3029.366186812328,2488.569634907054),c(8753.070628694428,4189.211667490573,4986.1283062197635,1822.5143898650485,2248.177837878639,2715.05432975986),c(11409.660720073749,5024.492351574193,5074.558958308245,1605.1705112478573,1291.8388380787642,1869.1892346541053),c(7033.125405726535,2088.659147604494,3274.201579891468,1007.3646301019922,1037.7470487940168,1110.3274064735135),c(12221.972198873042,4493.864972857326,6064.302025913941,1745.8047856472162,1987.5076203923445,2073.5778617163937),c(7256.925507028382,3007.193437659208,5522.380850294785,1584.8909607075109,2252.2893555046057,1942.382459210195),c(5309.035736438239,5790.2425515500845,4602.928813836344,1148.8806240900622,1458.7664536930158,1217.3552348338335),c(5023.068940330325,4889.090882522302,5679.968807221695,1770.052074336761,1897.0542326210752,2128.818031192688),c(2901.1124242831906,1808.7074615918025,2250.4467230209707,764.8917432065456,1152.0472387958935,1250.49933651961),c(9528.08209061008,5514.865239491849,8583.441884126836,3994.6305966538957,4907.507438353956,4957.114708378951),c(12416.761175932057,5295.2952896779725,8643.529378494652,3652.9642560284938,4228.284726544243,4698.866916077276),c(27834.101487837015,8790.116990882163,12692.066027314744,4245.479819642094,4617.234293960701,5693.880468769025),c(29334.391055823464,10155.110178891759,15830.220450147011,5019.188758735747,5618.79998764621,6342.261957997029),c(1458.8451047824046,784.9625705846062,885.4402471936414,179.42993630263058,194.88593547082567,229.24670332662097),c(40196.984861603814,15833.738005953122,22871.794554269556,7340.75643581106,8929.393980074667,9873.489791769136),c(4940.180013922233,2430.822319397784,3444.2605262154707,1026.762461053628,1189.873200954788,1213.2122221231116),c(5785.647063284763,2084.084773650038,2493.0641531098818,996.3431352431083,1028.7017100168898,1042.6581988650532),c(3642.968315635607,2016.3840391240933,1744.8047892842692,844.6873659848653,746.6516008755684,1011.5856035346377),c(663.1114112647293,299.16405662140585,443.28698675123405,286.5588663309825,394.7056920928115,201.62661858847386),c(1375.9561783743134,1145.423238195719,790.2072372521999,399.41897368595403,323.98758892618275,334.20302533157997),c(1827.70082729841,616.6256090606347,1270.9071921947145,646.3004585249544,766.386885480209,754.7188154698696),c(2175.834318212393,611.1363603152878,858.230815781801,538.2898089078917,499.13823979236787,524.781610024795),c(833.0337104013162,535.2017526713224,555.5258913250759,397.21467471417725,334.6775347536964,368.03762913581016),c(3025.445813895328,981.6606506262033,2140.475271064782,782.5261349807598,580.5462887865102,722.2652159025467))
targetgene="V173A"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(4272.9241563371,2593.6700321764088,4084.815890702548,996.7839950374637,893.0216283599859,1724.183789778833),c(2598.567842893658,1389.694807363656,1450.0359489893308,618.5262914805668,654.5536060539124,908.010285766586),c(1964.4675558717606,1047.531635570366,1045.2956567382041,599.1284605289311,584.657806412477,537.2106481569612),c(15603.840396323161,6681.3305978780645,9192.252911966767,3421.0720041975756,3529.3267301298893,3902.717973500186),c(33623.892997442184,12351.724551821408,18272.266919359692,6625.240989572315,6351.472428593492,7088.694748045455),c(1069.267150664376,481.2241400087446,571.3980596486496,217.34387861719134,226.13346942817324,158.12498512589218),c(5781.502616964359,4585.352451946441,6102.848720414048,2537.1481165150835,2571.3431232796283,2384.303815020549),c(8562.426097955817,3838.814622579263,5749.126112060122,2161.5355717243187,2166.7697888844964,2362.207747230031),c(7033.125405726535,2740.9648735098835,3167.6313068617596,1147.1171849126406,1218.6538243365555,1104.1128874074304),c(6519.21406199637,2744.6243726734483,3500.946841656805,1218.5364715982087,966.2066421021948,1456.9594699372597),c(9412.037593638752,3692.434656036679,4225.3979529970575,1647.0521917116162,1525.3730392336777,1818.7825800069868),c(6179.3694637231965,2439.0561925158045,3963.507175658093,1605.6113710422126,1456.2995431174356,1497.008592807573),c(7878.592455089065,3441.758963332504,5322.845019941289,1960.5035054982754,2090.2955610415142,1746.2798575693507),c(5570.135854623726,4143.467927946016,4695.894371160131,2043.826006631438,2074.6717940628405,2101.197946454541),c(2718.7567861853904,1790.4099657739794,2343.412280344759,1180.6225292836477,1237.5668054160026,1382.3852411442626),c(10502.02697590515,5539.566858845909,9663.883056438668,3506.1579445081593,4539.115459067332,5102.8106553726775),c(15840.073836586222,6527.631633008351,9565.248867570746,3761.4157654399114,4340.940309495733,4926.7326151669895),c(18036.630386400637,6319.040180685169,7837.449972918877,2484.6858009867956,2605.879871337749,3161.118698280936),c(28754.168570966827,9855.946122270352,13372.301812610756,4977.307078271988,5167.355352315057,6026.702489863698),c(1413.2561952579545,567.2223703525126,687.0381431489715,177.66649712520913,185.01829316850538,191.95958893012238),c(47242.54360629156,19613.085767124463,25754.860557615815,8349.443645296118,9662.066421021947,10032.305279013483),c(7045.558744687749,2122.509514867467,4260.543468570684,1327.428840803982,1247.4344477183229,2427.8054484831305),c(3298.9792710420284,1225.0173450032491,1565.6760324896527,583.6983677264935,491.73750806562765,758.8618281805917),c(3203.6570056727237,1455.5657923078188,1659.7753161222677,774.5906586823634,621.6614650461781,769.2193599573968),c(194.78897705901423,178.40058422377413,123.57616766210873,43.20425984682505,77.29653136817558,72.50272243763615),c(5242.724595311766,542.5207509984516,1476.1116540923447,556.8059202708167,273.827073889388,412.9202668352992),c(1541.7340311904957,943.235909408775,1579.280748195573,577.9671903998739,589.5916275636372,597.2843324624312),c(1015.3893484991167,527.8827543441932,654.1600801929976,449.6769902424648,413.6186731722587,474.3749553776765),c(609.2336090994701,342.1631717932899,486.3685864866481,346.07493856895576,270.5378597886145,287.93938339518354),c(708.7003207891795,219.56994981387587,439.885807824754,374.2899654076987,331.38832065292297,59.383182187016274))
targetgene="V173E"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(91.17781904890029,68.61560931683621,58.95376805898765,10.139775270173226,5.756124676353501,59.383182187016274),c(82.88892640809117,38.42474121742828,41.947873426587364,19.838690745991094,12.334552877900359,9.667029658351487),c(82.88892640809117,27.446243726734483,28.34315772066714,27.774167044387532,21.37989165502729,22.786569908971362),c(675.544750225943,92.40235388000609,222.21035653003037,89.49453825413761,99.49872654839623,64.9071991346457),c(298.40013506912817,113.44447407050252,151.91932538277587,98.75259393560012,139.79159928287072,87.00326692516337),c(381.2890614772194,63.12636057148931,219.942903912377,53.78489491135363,56.73894323834165,76.64573514835821),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.0,0.0,0.0,0.0),c(824.7448177605071,498.6067610356764,677.968332678358,332.849144738295,387.30496036607127,257.55729018322177),c(1156.3005233928718,382.41766259250045,758.4629006050526,318.74163131892357,514.7620067710417,239.60423510342613),c(1172.87830867449,533.3720030895402,504.5082074278751,458.9350459239273,333.03292770330967,321.77398719941374),c(1251.6227887621767,380.5879130107182,307.2398296920318,334.1717241213611,212.15430949988618,259.6287965385828),c(190.6445307386097,274.46243726734485,276.6292193537113,184.2793940405395,92.09799482165602,119.45686649248623),c(2420.356651116262,1292.718079529194,1336.6633181066622,606.6230770329721,365.1027651858506,989.48953574412),c(1177.0227549948945,408.03415673745263,562.328249178036,254.37610134304137,199.81975662198582,330.0600126208579),c(1753.1007935311281,1152.7422365228483,1111.0517826501518,621.1714502466989,518.8735243970084,465.3984278377787),c(920.067083129812,599.2429880337029,687.0381431489715,428.51572011340767,295.20696554441525,580.7122816195429),c(658.9669649443248,522.3935055988463,965.9348151203361,855.2680010493939,350.3013017323702,395.6577138739573),c(555.3558069342108,545.2653753711251,1092.912161708925,363.70933034317005,171.86143676541167,384.6096799786984),c(994.667116897094,349.4821701204191,718.7824797961187,167.96758164939126,166.92761561425152,392.20520328168885),c(294.2556887487236,260.73931540397757,233.54761961829723,85.96765989929474,205.5758812983393,177.45904444259514),c(8620.44834644148,1792.2397153557617,3185.7709278029865,638.3649822265579,1195.6293256311415,1264.9998810071374),c(4165.168552006581,845.3443067834221,1402.41944401861,710.2251287064812,671.8219800829729,576.5692689088208),c(435.16686364247863,269.8880633128891,461.426607692461,175.46219815343235,146.3700274844176,122.21887496630093),c(1881.5786294636694,846.2591815743132,1419.4253386510104,680.2466626903168,597.8146628155707,374.94265032034696),c(1065.1227043439715,362.2904171928952,641.689090795904,175.021338359077,172.68374029060502,339.0365401607557),c(1131.4338454704443,473.9051416816154,879.771615649508,340.7846210366915,242.57953993204038,372.8711439649859),c(1947.8897705901425,812.4088143113407,994.2779728410032,357.53729322219505,714.5817633930275,236.84222662961142),c(1985.1897874737833,539.7761266257781,689.3055957666248,390.1609180044915,534.4972913756823,495.7805210497405),c(1981.0453411533788,869.1310513465919,858.230815781801,511.3973614522149,496.6713292167878,708.4551735334732),c(538.7780216525925,172.91133547842725,238.08252485360396,109.3332290001287,60.85046086430844,122.90937708475461),c(687.9780891871567,135.4014690518901,297.0362929125916,128.73105995176445,145.54772395922424,117.38536013712519),c(285.96679610791455,332.09954909348727,333.31553479504555,170.17188062116804,157.05997331193123,69.05021184536776),c(1537.5895848700911,225.9740733501139,755.0617216785726,495.0855490610667,216.26582712585295,430.1828197966411),c(986.3782242562849,447.37377274577204,375.2634082216329,192.65573013329129,313.29764309866914,416.3727774275676),c(1777.9674714535556,239.69719521348114,361.6586925157127,189.56971157280378,146.3700274844176,294.1539024612667),c(4.144446320404558,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.0,0.0,0.8223035251933573,0.0),c(1384.2450710151224,408.03415673745263,549.8572597809425,278.1825302382307,411.1517625966786,264.4623113677585),c(2126.1009623675386,1306.4412013925614,1015.8187727087103,382.22544170609507,469.535312885407,551.7111926444884),c(1653.6340818414187,232.37819688635196,687.0381431489715,488.03179235138094,380.72653216452443,365.27562066199545),c(936.6448684114301,268.0583137311068,434.21717628062055,284.3545673592057,291.0954479184485,448.13587487643673),c(339.8445982731738,131.7419698883255,299.303745530245,144.60201254855733,72.36271021701543,157.4344830074385),c(1272.3450203641994,526.0530047624109,526.0490072955821,517.5693985731899,411.1517625966786,470.23194266695447),c(741.8558913524159,540.6910014166693,447.8218919865408,305.51583748826283,124.16783230419695,250.65226899868497),c(1889.8675221044787,1434.5236721173223,1896.724114667045,1022.3538631100744,1189.0508974295947,1246.356323808888),c(837.1781567217208,510.5001333172614,458.02542876598096,327.55882720603074,273.0047703641946,151.91046605980907),c(845.4670493625299,534.2868778804312,589.5376805898765,308.160996254395,335.49983827888974,536.5201460385075),c(667.2558575851339,264.39881456754216,541.9211756191557,310.3652952261718,336.3221418040831,177.45904444259514),c(683.8336428667521,724.5808343857904,443.28698675123405,119.47300427030193,192.4190248952456,294.84440457972033),c(373.00016883641024,115.27422365228483,338.984166339179,257.4621199035289,50.98281856198815,112.55184530794945),c(8661.892809645527,3010.852936822773,3410.2487369506703,1327.428840803982,1698.879083049476,1374.0992157228184),c(3522.7793723438745,1653.178747140307,1646.1706004163475,712.8702874726133,495.8490256915944,718.1222031918247),c(1114.8560601888262,631.2636057148931,564.5957017956894,211.17184149621633,264.78173511226106,151.2199639413554),c(1968.6120021921652,544.3505005802339,1313.9887919301286,354.0104148673522,336.3221418040831,567.5927413689229),c(1293.067251966222,1110.6579961418554,1108.7843300324985,482.30061502476127,490.0929010152409,508.2095591819067),c(1865.0008441820512,822.4724370111434,773.2013426197996,421.02110360936655,337.1444453292765,521.3290994325266),c(1641.200742880205,1074.9778792971006,992.0105202233499,441.300654149713,446.51081417999296,606.9513621207826),c(1529.300692229282,530.6273787168667,396.80420808933997,425.42970155292016,342.07826648043664,472.3034490223155),c(7074.569868930581,2306.399347836588,2631.3787627867373,1221.622490158696,601.1038769163441,1367.8846966567353))
targetgene="H179PfsTer2"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1421.5450878987635,892.9177959097618,1782.2177574755497,775.9132380654295,750.7631185015351,443.302360047261),c(2478.3788996019257,849.0038059469866,1171.1392770179662,410.440468544838,526.2742561237486,778.8863896157483),c(1450.5562121415953,541.6058762075604,767.5327110756662,389.7200582101362,374.9704074881709,448.82637699489044),c(1284.778359325413,538.861251834887,543.0549019279824,172.8170393873002,143.90311690883752,208.53163977301062),c(35911.627366305496,13930.798440899533,21535.13123616289,6337.359543858266,7329.191320048393,6762.087246016865),c(23635.777365267197,8180.810380148658,12584.362027976209,4114.103600924198,4249.66461819927,5141.478774006084),c(2474.2344532815214,1031.0638893343255,1257.3024764887944,452.32214900859697,497.4936327419811,499.2330316420089),c(8549.992758994604,4582.607827573767,5932.789774090045,2007.2346436999435,2193.905805215877,2431.257959075399),c(4252.201924735077,1722.7092312480343,2846.7867614638076,781.2035555976938,1018.0117641893763,1208.3787072939358),c(5288.313504836216,2053.8939055506303,2498.732784654015,846.8916649566421,822.3035251933572,776.8148832603873),c(2457.656667999903,1095.1051246967058,2334.3424698741455,428.0748603190523,976.0742844045151,838.9600739212183),c(4335.090851143168,2841.60110050791,3732.227008657449,1387.826632630666,1411.8951527569943,1360.9796754721986),c(1865.0008441820512,1736.4323531114017,1928.4684513141922,903.7625784284832,772.1430101565625,957.7264382952508),c(3050.312491817755,1357.6741896824658,1371.8088336802896,681.1283822790276,364.28046166065724,520.6385973140729),c(7256.925507028382,3686.030532500441,4664.150034512984,1390.9126511911534,1654.4746926890348,1641.3235355643917),c(186.50008441820512,80.50898159842114,283.4315772066714,99.19345372995548,97.03181597281616,61.454688542377305),c(1475.4228900640228,281.78143559447403,553.2584387074226,215.13957964541453,304.25230432154217,552.401694762942),c(629.9558407014929,74.1048580621831,225.61153545651044,50.69887635086613,80.58574546894901,68.35970972691408),c(1019.5337948195213,879.1946740463947,647.3577223400374,482.30061502476127,256.55869986032747,703.6216587042975),c(9793.32665511597,3235.9121353819955,4782.05757063096,1382.5363150984017,1370.7799764973265,1856.0696944034853),c(9395.459808357135,3932.1318512501603,6178.808383105436,1769.6112145424056,2392.0809547874765,3195.6438042036198),c(14824.684488087105,5189.1698139346,7696.867910624368,2232.9548584098866,2953.714262494539,3295.766611379403),c(35248.51595504077,13027.817022289968,19158.84089286216,5909.284683539214,6787.293296945971,7775.0538537884095),c(25231.38919862295,8199.107875966482,11803.224601194623,4059.8778462184887,4331.072667193413,5132.502246466185),c(2051.5009286002564,728.2403335493549,930.7892995467089,212.93528067363775,208.86509539911273,249.27126476177762),c(2615.145628175276,975.2565270899653,1355.936665356716,553.2790419159738,562.4556112322564,683.5970972691408),c(5764.924831682741,2265.229982246486,3114.346170346905,1118.9021580738977,1399.560599879094,1622.6799783661424),c(3431.601553294974,1235.0809677030518,1405.82062294509,767.5369019726777,819.8366146177772,639.4049616881055),c(451.74464892409685,99.72135220713528,292.50138767728487,118.15042488723586,69.89579964143536,104.26581988650531),c(2063.93426756147,1504.0541562250496,1715.3279052547753,482.74147481911666,842.0388097979978,666.3345443077989))
targetgene="R174W"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(103.61115801011395,295.50455745784126,281.164124589018,64.80638977023757,67.4288890658553,70.43121608227511),c(3642.968315635607,1118.8918692598756,2904.6068032139683,983.9990610011583,1224.409949012909,842.4125845134866),c(2192.4121034940113,779.4733218392593,1097.4470669442317,430.27915929082906,351.94590878275693,368.03762913581016),c(3651.257208276416,1610.1796319684229,2027.1026401821139,734.9132771903812,694.0241752631936,1080.6358153800054),c(2171.6898718919883,759.346076439654,937.591657399669,640.1284214039794,318.23146424982923,504.06654647118467),c(9515.648751648865,3965.982218513133,5066.622874146457,1676.1489381390697,1893.7650185203017,1796.686512216469),c(5528.691391419681,3826.0063755067868,5051.884432131711,1800.4714001472807,1477.679434772463,1427.9583809622052),c(3514.4904797030654,1144.5083634048278,1857.043693858111,493.3221098836452,444.0439036044129,597.9748345808848),c(11480.116307520626,4757.348912633977,6908.928125989822,2206.5032707485652,2440.5968627738844,2538.2857874357187),c(5052.080064573157,3338.3781119618043,4995.198116690377,1412.514781114566,1516.3277004565507,1846.402664745134),c(5014.780047689515,2002.6609172607261,2252.714175638624,857.913159815526,559.1663971314829,697.4071396382144),c(3290.6903784012193,1536.989648697131,3699.348945701475,972.0958465535637,1184.1170762784345,1320.9305526018852),c(2204.845442455225,1014.5961430982848,1048.6968356646842,798.3970875775527,647.1528743271722,231.31820968198198),c(3332.1348416052647,1748.3257253929864,2284.4585122857716,1047.923731182685,1172.6048269257274,1104.803389525884),c(314.97792035074644,62.21148578059816,129.24479920624216,56.870913471841135,48.51590798640808,54.54966735784053),c(103.61115801011395,89.65772950733265,105.43654672088176,52.903175322642916,29.60292690696086,17.26255296134194),c(5628.15810310939,2534.2031707684837,2745.8851199782325,1204.8698179731925,1129.0227400904796,1505.985120347471),c(14741.795561679013,4713.434922671202,8398.644495788087,2526.5674814505546,3226.719032858734,2929.800488598954),c(6332.713977578165,3162.7221521107035,5370.46152491201,1800.4714001472807,2151.1460219058226,2725.4118615366656),c(9714.582175028285,2992.55544100495,4681.155929145385,1426.6222945339373,1376.53610117368,1592.2978851541804),c(31501.93648139505,12004.987006073663,18020.579678800168,5261.661645631194,5801.351370239136,6887.758631575434),c(34481.79338576592,11513.699243365116,16248.565458104058,5182.306882647229,5868.780259304991,6858.75754260038),c(3381.8681974501196,1339.3766938646427,1662.042768739921,396.7738149198219,431.7093507265126,412.2297647168455),c(489.0446658077379,317.46155243922885,240.34997747125735,183.39767445182878,41.93747978486122,177.45904444259514),c(4703.946573659174,1746.4959758112043,2363.8193539036392,931.9776052672261,907.000788288273,993.6325484548421))
targetgene="R174R"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(5429.224679729971,2376.8447067352063,2709.6058780957787,1122.4290364287406,947.2936610227475,1213.9027242415652),c(3589.0905134703476,851.7484303196601,1571.344664033786,629.1069265450953,466.24609878463355,725.0272243763615),c(1521.011799588473,803.2600664024292,973.8708992821229,545.3435656175774,383.1934427401045,729.8607392055372),c(11674.905284579641,3348.441734661607,5081.361316161205,1727.7295340786466,1791.7993813963255,2183.3676985505285),c(3319.7015026440513,1200.3157256491882,1588.3505586661865,532.558631581272,697.313389363967,859.6751374748286),c(6515.069615675966,2036.5112845236986,2854.7228456255943,1156.8161003884586,876.5755578561188,1114.4704191842357),c(56090.93650035529,16760.506169125856,24935.17643633412,8006.45472528765,8650.633085034118,10787.024094483351),c(2511.5344701651625,1156.4017356864128,1267.5060132682345,351.36525610122004,307.5415184223156,390.13369692632784),c(29388.26885798872,10661.035938254565,15711.179187720209,5335.285231288538,5507.789011745107,5430.799161638174),c(2300.1677078245298,813.3236891022318,1126.9239509737254,312.1287344035932,269.7155562634212,313.48796177796964),c(40532.685013556584,13424.872681536726,19344.772007509735,5652.26342343004,6870.345952990499,7031.383072213799),c(23884.44414449147,7684.948243485655,10831.621154530154,3891.028544980387,3809.7322322208242,4254.183551793108),c(55116.99161506022,17424.70526731283,24351.30738728838,7329.734940952177,8520.709128053568,9711.912296050976),c(3182.9347740707008,1202.1454752309703,1558.8736746366926,354.45127466170754,323.98758892618275,438.4688452180853),c(53815.63547045319,15095.434049703965,21758.47531900175,7106.659885008366,8440.12338258462,8656.134556935302),c(4044.979608714849,1147.2529877775014,1368.4076547538095,625.1391883958971,708.825638716674,617.9993960160415),c(11190.005065092308,4470.078228294156,6501.920381121042,1815.9014929497182,2152.7906289562093,4182.371331473925),c(4330.946404822764,1489.4161595707913,1790.1538416373364,987.0850795616458,692.3795682128068,878.3186946730779),c(2092.945391804302,1258.8677122662216,1346.8668548861024,914.3432134930118,656.198213104299,719.503207428732),c(1106.567167548017,587.349615752118,908.1147733701752,450.9995696255309,369.2142828118174,464.70792571932503),c(1678.5007597638462,730.9849579220283,987.4756149880432,503.02102535946307,400.46181676916495,736.765760390074),c(319.122366671151,70.44535889861851,179.12875679461632,128.2902001574091,32.89214100773429,124.29038132166197),c(1102.4227212276126,76.84948243485655,512.4442915896619,302.42981892777533,273.0047703641946,113.24234742640313),c(1002.9560095379031,834.3658092927283,1227.8255924593004,353.5695550729968,444.86620712960627,328.67900838395053),c(190.6445307386097,63.12636057148931,39.680420808933995,26.451587661321458,29.60292690696086,44.882637699489045),c(22997.532631924892,7729.777108239322,8390.7084116263,3765.3835035891098,3823.7113921491114,4826.609807991206),c(34995.70472949609,13052.518641644028,15688.504661543675,5946.316906265064,7280.675412061985,8402.720279462803),c(2192.4121034940113,958.7887808539245,914.9171312231352,308.160996254395,257.38100338552084,380.46666726797633),c(4832.424409591715,1837.9834549003192,2751.553751522366,1153.2892220336157,1143.82420354396,1831.9021202576066),c(6614.536327365675,2612.882402785123,2669.9254572868444,1240.138601521621,1242.5006265671627,2503.760681513035))
targetgene="V172A"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2229.7121203776524,1048.4465103612572,1255.035023871141,473.04255934329876,615.0830368446312,463.3269214824177),c(5677.891458954245,2530.5436716049194,3017.979434096637,1084.5150941141799,1776.997917942845,1566.0588046529408),c(953.2226536930484,592.8388644974648,580.467870119263,272.451352911611,241.75723640684703,263.08130713085114),c(2068.0787138818746,1294.5478291109764,1693.7871053870683,556.3650604764614,623.3060720965648,1254.6423492303322),c(1931.311985308524,911.2152917275848,1155.2671086943926,526.8274542546524,463.7791882090535,501.30453799736995),c(2001.7675727554017,679.751969632124,970.4697203556428,289.64488489147,365.1027651858506,457.1124024163346),c(17385.95231409712,8351.891966045303,9659.348151203361,3647.233078701874,3947.8792244533083,4190.657356895369),c(29732.2579025823,12206.259460069716,17539.87972385765,6217.886539587965,6841.565329608732,6191.732496174127),c(2449.367775359094,864.5566773921362,1330.9946865625288,343.4297798028236,320.6983748254093,390.13369692632784),c(25181.655842778095,10246.597657980874,15077.426181086092,5295.166990002201,5288.23397051848,6281.497771573105),c(32235.503480106654,13591.379893478916,21501.11944689809,7096.960969532548,8402.297420425724,8979.289548371624),c(592.6558238178518,345.8226709568545,329.9143558685655,99.63431352431083,91.27569129646265,95.97979446506119),c(32517.325829894166,10061.79295022086,15330.247147954442,5291.199251853002,6666.414678742547,6998.929472646476),c(1798.6897030555783,803.2600664024292,1128.057677282552,211.61270129057166,193.24132842043895,226.48469485280626),c(30349.78040432258,12085.495987672084,18578.373022742897,5571.1452212686545,7436.913081848723,8596.060872629832),c(5329.757968040262,2579.03203552215,3151.759138538186,1720.675777368961,2002.309083845825,2902.8709059792604),c(2660.7345376997264,1264.3569610115685,1428.4951491216239,496.84898823848806,446.51081417999296,598.6653366993385),c(3257.534807837983,1328.398196373949,1490.8500961070915,503.9027449481738,557.5217900810962,624.9044172005782),c(650.6780723035157,531.5422535077578,479.566228633688,352.24697568993076,362.63585461027054,343.17955287147777),c(1545.8784775109002,755.6865772760895,910.3822259878285,439.09635517793623,467.8907058350203,528.924622735517),c(2030.7786969982335,945.9805337814485,1898.9915672846982,968.5689681987208,955.5166962746812,703.6216587042975),c(787.4448008768661,384.2474121742828,468.22896554542115,174.13961877036627,127.45704640497037,161.57749571816055),c(19868.475660019452,7100.3432521062105,8730.826304274306,4596.404215948959,4741.402126264898,5610.329712436131),c(28468.20177485891,12557.571379771916,16188.477963736243,7595.132537154102,8477.949344743512,11001.079751203992),c(3945.5128970251394,1656.8382463038715,1762.944410225496,670.547747214499,729.3832268465079,1026.7766501406186),c(2296.0232615041255,1091.4456255331413,877.5041630318547,430.72001908518445,416.08558374783877,481.970478680667),c(5918.269345537709,2096.8930207225144,3334.289074259282,2182.6968418533756,2711.957026087692,3366.197827461678),c(111.90005065092308,85.99823034376804,102.03536779440171,51.13973614522149,74.8296207925955,63.526194897738335),c(658.9669649443248,517.8191316443906,218.80917760355032,122.55902283078943,202.2866671975659,329.36951050240424),c(24634.588928484696,8788.28724130038,11145.663342075146,5496.639916022599,5920.585381392172,7497.472002170031))
targetgene="E171G"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(3986.9573602291853,1417.1410510903904,1396.7508124744766,597.805881145865,553.4102724551294,615.2373875422268),c(2669.0234303405355,1293.6329543200852,1419.4253386510104,523.7414356941649,506.5389715191081,695.3356332828533),c(2623.4345208160853,1073.1481297153182,868.4343525612411,658.2036729725489,578.0793782109301,642.1669701619202),c(2760.201249389436,1940.449431480128,1830.9679887550972,428.956579907763,548.4764513039693,798.9109510509049),c(3597.3794061111566,1605.6052580139672,1545.2689589307724,821.7626566783866,592.0585381392173,774.7433769050263),c(5868.535989692855,3478.35395496815,3210.7129065971735,1061.149525013346,1382.2922258500334,1579.1783449035606),c(28331.435046285562,9255.788259445759,12845.119079006348,4450.4796240173355,4488.132640505344,5590.305151000974),c(29429.71332119277,10603.398826428422,13727.158147273509,5273.564860078788,5003.716950801579,5300.984763368883),c(35994.51629271359,11304.192916251042,15883.505586661864,5371.876594220033,5303.035433971961,5900.340602186675),c(1952.034216910547,838.940183247184,827.6202054434805,221.31161676638953,155.41536626154453,238.91373298497246),c(52041.812445320036,19127.28725316126,22919.411059240276,8650.550884840828,7799.548936458994,9258.942906345363),c(2631.7234134568944,991.724273326006,1002.21405700279,230.56967244785204,214.62122007546625,261.00980077549013),c(50856.50079768433,15717.548907509947,17296.128567459917,7144.573827322926,6882.6805058684,8056.088215999056),c(1417.400641578359,749.2824537398513,751.6605427520925,201.9137858147538,141.43620633325745,180.22105291640986),c(60923.360909947005,21490.4088380331,23064.52802677009,8129.895467707151,8744.375686906162,9922.515442179347),c(8156.27035855617,2352.143087381145,3615.4531988483004,1874.5358455989808,1325.5532826116919,1856.760196521939),c(4824.135516950906,1446.4170443989071,1762.944410225496,1006.4829105132816,1054.193119297884,1056.4682412341267),c(5280.024612195407,2091.4037719771677,1749.339694519576,915.6657928760778,907.000788288273,1389.2902623287994),c(27966.72377008996,9956.58234926838,10974.470669442317,4770.10297492497,6087.512997006424,6758.634735424596),c(2412.067758475453,1042.042386825019,934.1904784731889,320.9459302907004,309.1861254727023,464.70792571932503),c(31709.158797415275,12070.857991017825,14346.17271189288,6166.746803442743,7378.529531559994,8162.425542240923),c(4318.51306586155,1766.6232212108096,1869.5146832552045,768.4186215613884,1249.0790547687097,1659.967092762641),c(2984.001350691282,1252.4635887299835,1800.3573784167768,894.5045227470207,816.5474005170038,1157.2815505283636),c(7837.14799188502,3020.0016847316842,5202.67003120566,1991.8045508975058,2494.0465919114527,4131.964676826807),c(1686.7896524046553,1225.9322197941403,1286.779360518288,676.2789245411186,673.4665871333596,513.0430740110825),c(824.7448177605071,426.33165255527564,485.2348601778214,481.41889543605055,269.7155562634212,274.81984314456366),c(634.1002870218974,709.942837731532,767.5327110756662,508.3113428917274,249.15796813358725,574.4977625534598),c(31153.802990481065,9909.92373493293,12239.709230092898,4892.661997755759,5458.450800233505,6874.639091324814),c(46898.55456169798,15530.914450168153,20146.316507850202,7515.336914375782,10348.6898645584,11963.639704328418),c(2768.490142030245,939.5764102452105,866.1668999435877,266.7201755849914,256.55869986032747,441.2308536919))
targetgene="E171Ter"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2901.1124242831906,1808.7074615918025,1086.1098038559649,431.1608788795398,781.1883489336894,835.5075633289499),c(3406.734875372547,1193.91160211295,1326.4597813272221,661.7305513273918,560.8110041818696,745.7422879299718),c(1554.1673701517093,933.1722867089724,793.6084161786799,456.2898871577952,367.5696757614307,421.2062922567433),c(7066.280976289772,2503.097427878185,4706.097907939572,1427.9448739170034,1434.097347937215,1679.3011520793439),c(2963.279119089259,1248.804089566419,1615.5599900780269,621.1714502466989,518.8735243970084,691.1926205721313),c(4612.768754610273,1287.2288307838473,1650.7055056516542,504.7844645368845,627.4175897225316,696.026135401307),c(31278.1363800932,10209.087791554337,14491.289679422694,4976.866218477632,5178.867601667764,5669.712894623147),c(1649.4896355210142,604.7322367790498,693.8405010019316,175.90305794778772,187.48520374408545,152.60096817826275),c(39923.45140445711,15888.630493406592,21034.024207661496,6767.638703149096,7228.04798644961,7770.910841077688),c(1728.234115608701,793.1964437026265,940.992836326149,281.2685487987182,158.70458036231796,245.81875416950922),c(44387.02009153282,16652.550943800703,22470.45544094491,6688.283940165131,7110.458582346961,8010.515076181114),c(28650.55741295671,10425.913116995538,14540.039910702242,4852.102896675066,4699.464646480037,6188.970487700312),c(60334.84953244956,19075.139390080465,23489.6753925801,7689.035673351793,8706.549724747267,8395.124756159812),c(3763.1572589273387,1439.098046071778,1351.401760121409,362.82761075445933,268.89325273822783,412.9202668352992),c(32666.525897428728,10543.017090229607,13295.208423610542,4529.393527206945,4989.7377908732915,5832.671394578215),c(5686.180351595054,1934.0453079438898,2151.812534153049,1053.2140487149495,860.1294873522517,1265.690383125591),c(7070.425422610177,2907.472085452073,3938.565196863906,1323.4611026547836,1748.2172945610776,1636.490020735216),c(3008.868028613709,1395.1840561090028,1353.6692127390625,696.9993348758204,824.7704357689373,850.0081078164771),c(2482.5233459223305,1085.0415019969032,2615.5065944631638,885.6873268599136,739.2508691488282,893.5097412790589),c(1409.11174893755,763.9204503941098,1048.6968356646842,487.1500727626702,465.4237952594402,571.0452519611914),c(1222.6116645193447,736.4742066673753,709.7126693255052,432.9243180569612,402.928727344745,536.5201460385075),c(66.31114112647293,151.8692152879308,87.29692577965479,104.48377126221976,41.11517625966786,146.38644911217966),c(2822.367944195504,176.57083464199184,386.6006713098998,304.1932581051968,203.9312742479526,256.86678806476806),c(1065.1227043439715,227.8038229318962,789.0735109433732,414.84906648839154,211.3320059746928,580.0217795010892),c(99.4667116897094,112.52959927961138,105.43654672088176,35.70964334278397,46.87130093602136,42.120629225674335),c(39243.76220791076,15121.050543848918,15787.138850411597,7132.2297530809765,8421.210401505172,9892.82385108584),c(31796.19217014377,11952.839142992867,13570.703916655426,5662.403198700214,6335.026358089624,8256.333830350623),c(1906.4453073860968,748.3675789489603,759.5966269138793,237.62342915753777,154.59306273635116,243.0567456956945),c(8467.103832586512,4123.340682546411,5956.598026575406,2355.513881240676,3471.765483366354,3529.8468295352),c(4053.268501355658,1734.6026035296193,1718.7290841812553,665.69828947659,836.2826851216444,1267.0713873624984))
targetgene="V172D"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(2838.9457294771223,1927.6411844076517,1579.280748195573,999.8700135979511,1033.63553116805,1169.7105886605298),c(1715.800776647487,642.2421032055869,722.1836587225987,396.7738149198219,497.4936327419811,454.3503939425199),c(1570.7451554333277,710.8577125224231,721.049932413772,420.5802438150112,313.29764309866914,447.4453727579831),c(18745.330707189816,7556.865772760894,9111.758344040072,4055.9101080692903,3674.8744540891134,4216.896437396609),c(26197.04519127721,9452.486339487356,14055.938776833247,4923.9630431549895,4783.339606049759,4799.680225371513),c(1777.9674714535556,632.1784805057843,658.6949854283043,284.79542715356104,159.5268838875113,200.2456143515665),c(6966.814264600062,4431.653487076728,6751.3401690629125,3414.8999670766,3665.8291153119867,4358.449371679613),c(6187.658356364005,3244.146008500016,4986.1283062197635,1487.9018059493321,1656.1192997394214,1845.7121626266803),c(3589.0905134703476,2772.985491191074,3251.527053714934,1536.3963833284215,1959.5493005357703,2090.8404146777357),c(2461.8011143203075,1277.1652080840447,1769.7467680784562,728.7412400694062,835.4603815964509,805.125470116988),c(7455.8589304078005,3925.7277277139224,5254.821441411687,2364.331077127783,3033.477704438295,2320.7776201228103),c(7646.50346114641,3002.6190637047525,3814.989029201797,1515.2351131993644,1523.728432183291,1499.7706012813878),c(1873.2897368228603,1196.6562264856234,1698.322010622375,846.8916649566421,1230.9883772144558,1122.065942487226),c(5715.191475837886,2296.335725136785,2736.815309507619,974.7410053196958,879.8647719568922,949.4404128738067),c(2851.379068438336,1929.4709339894341,2971.496655434743,1371.0739604451624,1990.796834493118,1714.5167601204814),c(28339.72393892637,8652.885772248492,12187.55781988687,4348.200151726893,4001.3289535908766,5411.465102321471),c(7605.058997942365,3341.122736334478,3672.1395142896345,1314.6439067676765,1254.0128759198699,1386.5282538549845),c(13100.594818798809,5980.536508055444,9046.002218128124,3907.78121716589,4201.971013738055,4314.257236098578),c(1085.8449359459942,674.2627208867772,507.90938635435515,179.42993630263058,130.7462605057438,160.88699359970687),c(18488.375035324734,7383.954437282467,7933.816709169146,3461.190245483913,3221.7852117075736,3630.6601388294366),c(44527.931266426574,17020.330609738943,21303.851069162247,8667.303557026331,7773.235223652806,9127.05700172071),c(6506.780723035156,2166.4235048302417,4250.339931791244,1084.0742343198244,1597.7357494506932,1433.4823979098346),c(2615.145628175276,1152.7422365228483,1012.4175937822303,534.3220707586935,473.64683051137376,608.3323663576899),c(2291.8788151837207,1230.506593748596,1114.4529615766319,581.4940687547167,500.78284684275457,485.42298927293535),c(107.75560433051851,61.29661098970701,69.15730483842782,47.61285779037863,21.37989165502729,14.500544487527229),c(489.0446658077379,157.3584640332777,195.0009251181899,51.580595939576845,101.9656371239763,54.54966735784053),c(1052.6893653827578,603.8173619881586,570.2643333398229,445.70925209326657,410.32945907148525,332.8220210946726),c(1458.8451047824046,732.8147075038107,922.853215384922,395.01037574240047,441.5769930288329,529.6151248539708),c(870.3337272849573,505.92575936280565,544.1886282368091,336.81688288749325,321.5206783506027,435.70683674427056),c(11131.982816606644,4819.5603984145755,5827.3532273691635,3273.824832882886,3529.3267301298893,4157.513255209593))
targetgene="V173M"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@

\newpage\section{Comparison results of D16-REP1,D16-REP2,D16-REP3 vs D4-REP1,D4-REP2,D4-REP3 pos.}

The following figure shows the distribution of RRA score in the comparison D16-REP1,D16-REP2,D16-REP3 vs D4-REP1,D4-REP2,D4-REP3 pos., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('D16_D4_w_controls.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("Q331H","L22L","V197L","D393N","W23Ter","G199Ter","R196Q","V197E","E198E","D324A")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='D16-REP1,D16-REP2,D16-REP3_vs_D4-REP1,D4-REP2,D4-REP3 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(0.0,8.233873118020345,2.267452617653371,11.462354653239299,8.223035251933572,3.452510592268388),c(45.588909524450145,123.50809677030517,89.56437839730816,167.96758164939126,167.74991913944487,124.29038132166197),c(20.72223160202279,60.381736198815865,68.02357852960114,167.96758164939126,178.43986496695854,79.40774362217293),c(0.0,8.233873118020345,23.8082524853604,32.62362478229647,36.18135510850772,12.429038132166196),c(4.144446320404558,38.42474121742828,23.8082524853604,66.12896915330364,104.43254769955637,26.929582619693427),c(16.577785281618233,24.701619354061034,23.8082524853604,75.82788462912151,75.65192431778887,41.430127107220656),c(116.04449697132763,181.1452085964476,229.01271438299048,419.25766443194516,643.0413567012054,418.4442837829286),c(8.288892640809117,27.446243726734483,24.941978794187083,92.58055681462511,84.6972630949158,69.05021184536776),c(16.577785281618233,86.91310513465919,107.70399933853513,230.1288126534967,288.6285373428684,165.72050842888262),c(0.0,42.084240380992874,27.209431411840455,36.15050313713933,80.58574546894901,26.929582619693427),c(4.144446320404558,10.063622699802643,2.267452617653371,19.838690745991094,10.689945827513645,4.143012710722066),c(33.155570563236466,115.27422365228483,70.2910311472545,158.70952596792876,207.22048834872604,178.8400486795025),c(4.144446320404558,4.574373954455747,4.534905235306742,36.591362931494686,46.04899741082801,19.334059316702973),c(0.0,11.893372281584943,13.604715705920228,38.35480210891612,64.13967496508187,35.906110159591236),c(4.144446320404558,5.489248745346897,2.267452617653371,11.021494858883942,13.979159928287073,13.810042369073551),c(33.155570563236466,49.40323870812207,66.88985222077444,120.795583653368,194.06363194563232,121.52837284784725),c(161.63340649577776,546.1802501620163,490.9034917219549,868.9346546744099,1183.294772753241,854.8416226456528),c(58.022248485663816,110.69984969782908,141.7157886033357,235.85998998011635,337.1444453292765,203.00762282538122),c(16.577785281618233,21.042120190496437,17.005894632400285,49.37629696780006,87.16417367049587,42.81113134412801),c(0.0,14.63799665425839,7.936084161786799,21.16127012905717,43.582086835247935,37.28711439649859),c(0.0,5.489248745346897,6.802357852960114,16.311812391148234,14.80146345348043,9.667029658351487),c(4.144446320404558,9.148747908911494,24.941978794187083,14.548373213726803,23.84680223060736,22.096067790517683),c(16.577785281618233,3.6594991635645977,10.20353677944017,22.924709306478597,23.024498705414004,5.524016947629421),c(0.0,0.9148747908911494,2.267452617653371,11.021494858883942,3.289214100773429,2.7620084738147104),c(0.0,1.8297495817822989,1.1337263088266856,4.408597943553577,0.8223035251933573,4.143012710722066),c(0.0,3.6594991635645977,1.1337263088266856,12.784934036305373,16.446070503867144,5.524016947629421),c(0.0,11.893372281584943,12.470989397093541,52.903175322642916,55.09433618795494,27.620084738147103),c(8.288892640809117,0.9148747908911494,3.401178926480057,26.010727866966104,2.466910575580072,13.810042369073551),c(24.86667792242735,8.233873118020345,14.738442014746912,24.24728868954467,19.735284604640576,40.73962498876698),c(0.0,27.446243726734483,4.534905235306742,15.430092802437517,27.13601633138079,6.214519066083098))
targetgene="Q331H"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(41.44446320404558,128.08247072476092,97.50046255909496,418.81680463758977,348.6566946819835,220.96067790517682),c(58.022248485663816,213.16582627763782,149.6518727651225,486.70921296831483,474.46913403656714,346.63206346374614),c(111.90005065092308,350.3970449113102,258.4895984124843,848.2142443397081,812.435882891037,604.8798557654216),c(99.4667116897094,282.69631038536517,269.8268615007512,766.2143225896116,810.7912758406502,599.3558388177921),c(74.60003376728204,167.42208673308033,141.7157886033357,473.48341913765415,440.7546895036395,268.6053240784806),c(124.33338961213676,461.0968946091393,323.11199801560537,915.2249330817225,1079.6845285788781,757.4808239436843),c(161.63340649577776,589.1793653339003,600.8749436781434,1427.9448739170034,2075.4940975880336,1271.2144000732205),c(194.78897705901423,672.4329713049948,573.6655122663029,1368.8696614733856,1700.5236900998627,1044.7297052204142),c(339.8445982731738,913.0450413093671,680.2357852960114,1476.4394512960928,1856.7613598866008,970.155476427417),c(443.4557562832877,1143.5934886139369,1190.41262426802,2214.8796068413167,3133.7987345118845,2080.4828829009307),c(116.04449697132763,452.86302149111896,334.44926110387223,1040.8699744729995,1099.4198131835187,615.2373875422268),c(576.0780385362336,1421.7154250448461,1528.2630642983722,2595.782469164346,4057.2455933040246,2671.5526962972785),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,1.1337263088266856,3.967738149198219,2.466910575580072,1.3810042369073552),c(4.144446320404558,5.489248745346897,47.6165049707208,28.65588663309825,27.13601633138079,52.478161002479496),c(290.1112424283191,960.6185304357069,851.4284579288409,2030.159353006422,2412.63854291731,2061.8393257026814),c(414.4446320404558,1063.0845070155156,1148.4647508414325,2012.9658210265632,3216.8513905564137,2168.867154063001),c(1276.489466684604,2414.3545731617432,2917.077792611062,3916.5984130529973,6668.881589318127,5091.762621477418),c(857.9003883237435,1324.7386972103843,1134.8600351355124,2177.4065243211116,3595.933315670551,2741.9839123795537),c(712.844767109584,1162.805859222651,1116.7204141942852,2128.471087147667,3642.804616606573,2672.2431984157324),c(998.8115632174986,1929.4709339894341,1849.107609696324,3715.125487032599,6432.880477587634,5057.237515554734))
targetgene="L22L"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(219.6556549814416,973.426777508183,698.3754062372383,1113.6118405416335,1550.0421449894784,1068.2067772478392),c(24.86667792242735,121.67834718852288,98.63418886792165,202.79550540346452,240.93493288165368,162.9584999550679),c(99.4667116897094,1178.3587306678005,871.8355314877213,1296.1277954047516,1683.2553160708023,1431.4108915544737),c(37.30001688364102,369.60941552002436,201.80328297115003,473.04255934329876,514.7620067710417,334.8935274500336),c(265.24456450589173,1508.6285301795053,1319.657423474262,2076.0087716193793,2711.957026087692,1853.3076859296707),c(41.44446320404558,350.3970449113102,295.9025666037649,592.5155636136006,664.4212483562327,467.46993419313975),c(207.2223160202279,842.5996824107486,711.9801219431586,1106.9989436263031,1282.7934993016372,936.3208726231868),c(232.08899394265526,1134.4447407050252,734.6546481196923,1385.1814738645337,1553.331359090252,1128.9709636717628),c(244.52233290386894,1209.4644735580996,1171.1392770179662,1727.2886742842913,2540.917892847474,1854.688690166578),c(4.144446320404558,0.0,1.1337263088266856,2.2042989717767885,0.8223035251933573,2.071506355361033),c(132.62228225294587,284.5260599671475,171.19267263282953,109.3332290001287,214.62122007546625,124.29038132166197),c(41.44446320404558,54.892487453468966,96.36673625026827,100.9568929073769,104.43254769955637,245.12825205105554),c(157.48896017537322,1035.6382632887812,895.6437839730816,1504.6544781348357,2179.104341762397,1523.2476733088129),c(410.3001857200513,1518.692152879308,1360.4715705920228,2193.7183367122598,3100.084289978957,2315.9441052936345),c(236.23344026305983,1729.1133547842724,1480.6465593276514,2162.417291313029,3804.798411069664,2741.9839123795537),c(4741.246590542814,5058.342718837165,5440.752556059264,7613.2077887226715,13032.68857078952,10200.78779591618),c(70.45558744687749,112.52959927961138,112.23890457384186,561.2145182143703,875.7532543309255,513.7335761295361),c(169.9222991365869,325.6954255572492,337.8504400303523,875.1066917953849,1513.0384863557774,1060.6112539448488),c(3373.5793048093105,4162.68029855473,4210.65951098231,6523.402377076227,11177.571817953305,8848.784647983879),c(128.4778359325413,201.27245399605286,180.262483103443,909.4937557551028,1462.055667793789,908.7007878850397),c(4.144446320404558,1.8297495817822989,0.0,4.408597943553577,0.0,4.143012710722066),c(0.0,15.55287144514954,9.069810470613485,111.97838776626085,102.78794064916966,84.93176056980235),c(53.877802165259254,91.48747908911494,117.9075361179753,175.90305794778772,136.5023851820973,194.03109528548342),c(1678.5007597638462,2189.2953746025205,1886.5205778876048,3231.5022926247716,5428.025569801352,3043.0428360253572),c(464.17798788531053,685.2412183774709,670.0322485165711,1696.4284886794162,2875.5954276011703,1889.213796089262),c(16.577785281618233,46.65861433544862,31.744336647147197,105.80635064528583,96.2095124476228,49.716152528664786),c(70.45558744687749,130.82709509743438,92.96555732378822,297.58036118986644,359.3466405094971,204.38862706228858),c(335.7001519527692,2007.2352912151819,2257.249080873931,2809.158609632339,4715.9107169839035,4118.154634457733),c(567.7891458954244,2026.447661823896,2047.5097137409941,2743.911360067746,4538.293155542138,3559.538420628708),c(356.422383554792,2154.530132548657,1884.2531252699514,2777.8575642331084,4595.032098780481,3872.335880288224))
targetgene="V197L"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(128.4778359325413,387.90691133784736,209.73936713293682,580.6123491660061,418.55249432341884,323.1549914363211),c(319.122366671151,673.347846095886,557.7933439427293,1114.9344199246996,1174.2494339761142,1021.9431353114428),c(128.4778359325413,376.0135390562624,275.4954930448846,629.5477863394507,609.3269121682778,367.34712701735646),c(24.86667792242735,89.65772950733265,78.22711530904131,113.30096714932692,108.54406532552316,80.0982457406266),c(74.60003376728204,117.10397323406713,68.02357852960114,151.65576925824303,166.92761561425152,72.50272243763615),c(124.33338961213676,158.27333882416886,241.48370378008403,255.2578209317521,201.4643636723725,225.79419273435258),c(99.4667116897094,276.2921868491271,275.4954930448846,503.9027449481738,514.7620067710417,363.20411430663444),c(294.2556887487236,764.8353251850009,451.2230709130209,1069.0850013117424,1343.6439601659458,910.081792121947),c(169.9222991365869,461.0968946091393,300.4374718390717,615.4402729200793,727.7386197961212,489.56600198365743),c(377.1446151568148,783.1328210028239,680.2357852960114,1122.869896223096,1447.2542043403087,933.5588641493721),c(373.00016883641024,986.2350245806591,724.451111340252,1355.2030078483695,1355.1562095186528,937.7018768600942),c(431.02241732207403,888.3434219553061,670.0322485165711,1159.902118948946,1565.6659119681522,908.010285766586),c(62.16669480606838,93.31722867089724,61.22122067664102,208.96754252443952,292.7400549688352,176.07804020568778),c(82.88892640809117,280.8665608035829,208.60564082411014,279.50510962129675,382.3711392149111,371.49013972807853),c(157.48896017537322,392.4812852923031,320.844545397952,588.9886852587579,878.2201649065056,660.8105273601694),c(849.6114956829344,1295.4627039018676,1205.1510662827668,1881.1487425143112,2316.4290304696874,1653.0620715781042),c(310.83347403034185,643.1569779964781,580.467870119263,950.9345764245064,1084.6183497300383,690.5021184536776),c(671.4003039055384,1257.9528374753304,1032.8246673411106,1831.772445546511,2170.0590029852697,1331.978586497144),c(522.2002363709744,978.9160262535299,843.4923737670541,1559.7619524292554,2350.965778527808,1487.3415631492214),c(236.23344026305983,549.8397493255808,484.10113386899474,946.5259784809529,1220.2984313869422,905.938779411225),c(460.033541564906,654.1354754871718,654.1600801929976,996.3431352431083,1309.9295156330181,892.8192391606051),c(107.75560433051851,195.78320525070598,162.12286216221602,538.2898089078917,531.2080772749088,385.3001820971521),c(232.08899394265526,451.0332719093367,323.11199801560537,967.2463888156547,1200.5631467823016,771.9813684312115),c(136.76672857335043,224.14432376833162,215.40799867707025,720.3649039766544,704.7141210907072,457.1124024163346),c(12.433338961213675,14.63799665425839,32.87806295597388,214.69871985105917,223.66655885259317,187.8165762194003),c(58.022248485663816,166.5072119421892,114.50635719149524,463.78450366183625,655.3759095791057,476.44646173303755),c(219.6556549814416,138.14609342456356,187.06484095640312,717.2788854161669,1243.3229300923563,708.4551735334732))
targetgene="D393N"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(12.433338961213675,57.637111826142416,41.947873426587364,151.21490946388766,105.25485122474973,92.5272838727928),c(24.86667792242735,67.70073452594505,58.95376805898765,175.46219815343235,169.3945261898316,117.38536013712519),c(37.30001688364102,257.079816240413,173.4601252504829,575.7628914280971,554.2325759803227,324.53599567322846),c(136.76672857335043,325.6954255572492,327.64690325091215,850.8594031058403,997.4541760595423,596.5938303439774),c(29.011124242831908,194.8683304598148,150.7855990739492,447.9135510650434,527.9188631741354,216.1271630760011),c(128.4778359325413,384.2474121742828,267.5594088830978,904.2034382228386,984.2973196564486,606.9513621207826),c(103.61115801011395,341.2482970023987,304.9723770743784,741.0853143113562,934.9591081448472,439.84984945499264),c(261.1001181854872,960.6185304357069,785.672332016893,1751.0951031794807,2224.3310356480315,1405.8623131716877),c(451.74464892409685,1167.3802331771067,1032.8246673411106,1993.127130280572,2565.5869986032744,1675.8486414870756),c(70.45558744687749,291.84505829427667,213.1405460594169,855.7088608437492,812.435882891037,548.9491841706737),c(161.63340649577776,422.67215339171105,521.5141020602754,1295.2460758160407,1851.0052352102473,1005.3710844685546),c(700.4114281483703,1243.314840821072,1416.0241597245304,2900.8574468582533,4272.689116904684,2615.622024702531),c(571.9335922158291,1126.210867587005,1064.5690039882577,1964.4712436474738,3641.1600095561857,2686.7437429032593),c(712.844767109584,1192.9967273220589,1205.1510662827668,2552.1373495231655,4159.211230428001,2813.796132698736),c(555.3558069342108,1103.338997814726,969.3359940468162,1713.1811608649198,2763.762148174874,1987.2650969096842),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,2.7446243726734485,1.1337263088266856,5.290317532264292,4.933821151160144,0.0),c(37.30001688364102,83.2536059710946,36.27924188245394,74.9461650404108,46.04899741082801,51.097156765572144),c(215.51120866103702,560.8182468162746,215.40799867707025,273.7739322946771,207.22048834872604,271.3673325522953),c(140.91117489375497,515.0745072717172,519.246649442622,1309.3535892354123,1576.3558577956658,1235.998792032083))
targetgene="W23Ter"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(49.7333558448547,284.5260599671475,199.53583035349666,429.39743970211833,435.82086835247935,243.0567456956945),c(33.155570563236466,255.2500666586307,200.66955666232334,528.1500336377185,578.0793782109301,350.08457405601456),c(107.75560433051851,821.5575622202522,526.0490072955821,940.7948011543333,1243.3229300923563,892.8192391606051),c(290.1112424283191,1068.5737557608625,658.6949854283043,1383.4180346871124,1556.6205731910252,1261.547370414869),c(223.80010130184615,1447.3319191897983,1063.435277679431,1825.1595486311808,2230.087160324385,1548.1057495731452),c(116.04449697132763,1200.3157256491882,886.5739735024681,1459.6867791105892,1682.433012545609,1395.5047813948825),c(4.144446320404558,2.7446243726734485,2.267452617653371,5.731177326619649,1.6446070503867145,5.524016947629421),c(53.877802165259254,88.7428547164415,83.89574685317473,99.63431352431083,184.19598964331203,137.40992157228183),c(0.0,32.93549247208138,5.668631544133428,17.634391774214308,18.09067755425386,16.572050842888263),c(111.90005065092308,477.56464084518,341.2516189568324,360.62331178268255,471.1799199357937,417.75378166447496),c(16.577785281618233,32.93549247208138,30.61061033832051,74.50530524605544,85.51956662010916,54.54966735784053),c(29.011124242831908,133.5717194701078,75.95966269138793,164.4407032945484,244.2241469824271,191.2690868116687),c(435.16686364247863,1529.6706503700018,1378.6111915332497,2177.847384115467,2790.8981645062545,2175.0816731290843),c(227.9445476222507,1423.5451746266285,1316.256244547782,1844.9982393771718,2577.921551481175,2081.863887137838),c(240.37788658346437,2337.505090726887,1968.1488721231262,2221.4925037566472,3237.4089786862473,2832.4396898969853),c(207.2223160202279,557.15874765271,527.1827336044088,955.3431743680601,1235.0998948404226,1093.0648535121716),c(335.7001519527692,1340.2915686555339,1244.8314870917009,2112.600134550874,2805.699627959735,2335.9686667287915),c(261.1001181854872,1681.5398656579328,1666.5776739752278,2573.2986196522224,3574.553424015524,2932.5624970727686),c(4.144446320404558,18.297495817822988,6.802357852960114,18.51611136292502,27.13601633138079,11.738536013712519),c(132.62228225294587,397.05565924675886,252.8209668683509,401.6232726577308,655.3759095791057,466.77943207468604),c(20.72223160202279,104.29572616159103,71.4247574560812,155.62350740744125,228.60038000375332,145.0054448752723),c(4.144446320404558,33.850367262972526,15.872168323573598,26.451587661321458,32.06983748254093,24.167574145878717),c(294.2556887487236,901.1516690277822,731.2534691932121,1167.8375952473425,1693.1229583731226,1346.4791309846712),c(66.31114112647293,359.5457928202217,324.24572432443205,463.78450366183625,855.1956662010915,640.0954638065591),c(16.577785281618233,21.956994981387588,7.936084161786799,18.95697115728038,35.35905158331436,15.191046605980906),c(78.74448008768661,158.27333882416886,193.86719880936323,361.94589116574866,524.629649073362,408.08675200612345),c(16.577785281618233,114.35934886139368,146.25069383864243,203.67722499217524,354.412819358337,240.9852393403335),c(381.2890614772194,2461.9280622880833,2722.076867492872,3784.7813345407453,6275.820504275703,5675.236911570776),c(426.8779710016695,1581.8185134507974,1519.1932538277586,2351.546143091478,4066.290932081152,3390.365401607557),c(281.82234978750995,2148.1260090124188,1810.560915196217,3053.394935705207,5042.365216485667,4137.488693774436))
targetgene="G199Ter"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(140.91117489375497,737.3890814582664,455.7579761483276,768.4186215613884,930.025286993687,595.2128261070701),c(103.61115801011395,930.427662336299,773.2013426197996,1086.2785332916012,1332.1317108132387,1064.7542666555707),c(484.90021948733335,1967.8956752068625,1569.0772114161327,2264.6967636034724,3040.878436165035,2014.8851816478311),c(41.44446320404558,368.6945407291332,249.41978794187082,630.8703657225168,597.8146628155707,437.77834309963157),c(194.78897705901423,1430.8641729537576,1190.41262426802,1845.4390991715272,2561.475480977308,1713.8262580020278),c(265.24456450589173,2025.5327870330048,1709.6592737106419,2222.374223345358,3382.1343991202784,2632.8845776638727),c(306.6890277099373,1526.9260259973285,1188.1451716503664,2086.1485468895526,2950.425048393766,2291.776531147756),c(140.91117489375497,882.8541732099592,874.1029841053746,1559.7619524292554,2029.4451001772056,1575.7258343112924),c(153.34451385496865,1251.5487139390925,980.673257135083,1535.955523534066,1994.0860485938913,1874.022749483281),c(41.44446320404558,279.0368112218006,221.0766302212037,519.3328377506114,623.3060720965648,349.39407193756085),c(49.7333558448547,226.88894814100505,150.7855990739492,438.2146355892255,394.7056920928115,287.2488812767299),c(124.33338961213676,644.0718527873692,538.5199966926756,994.1388362713316,1152.8695423210868,996.3945569286568),c(91.17781904890029,197.61295483248827,114.50635719149524,171.05360020987877,83.87495956972244,136.02891733537447),c(0.0,0.9148747908911494,0.0,0.0,0.0,0.0),c(12.433338961213675,17.38262102693184,24.941978794187083,59.07521244361793,86.34187014530251,67.66920760846041),c(24.86667792242735,42.99911517188402,30.61061033832051,218.22559820590203,449.8000282807664,261.7003028939438),c(4915.313335999806,5553.289980709277,5812.614785354417,8480.37900421966,13837.723721953816,10664.114717398597),c(223.80010130184615,282.69631038536517,280.0303982801913,936.3862032107796,1436.564258512795,813.4114955384322),c(0.0,0.0,0.0,0.8817195887107153,0.0,1.3810042369073552),c(0.0,3.6594991635645977,4.534905235306742,46.73113820166791,71.54040669182208,26.929582619693427),c(182.35563809780058,96.0618530435707,257.35587210365765,224.8384951212324,409.5071555462919,279.65335797373945),c(1218.4672181989401,1673.3059925399123,1391.0821809303432,2454.7073349706316,3864.0042648835856,2367.7317641776604),c(8.288892640809117,9.148747908911494,23.8082524853604,58.63435264926257,69.89579964143536,26.929582619693427),c(20.72223160202279,52.14786308079552,58.95376805898765,145.04287234291266,240.93493288165368,150.5294618229017),c(3514.4904797030654,3718.9660249725225,4453.276941071221,6424.649783140627,10040.326042610892,9031.767709374102),c(8.288892640809117,14.63799665425839,21.540799867707026,59.51607223797328,101.9656371239763,63.526194897738335),c(542.9224679729971,685.2412183774709,657.5612591194777,2171.675346994492,3762.0386277596094,2363.5887514669384),c(174.06674545699144,890.1731715370884,952.3300994144158,1355.2030078483695,2069.73797291168,2021.0997007139142),c(431.02241732207403,1418.0559258812816,1308.3201603859952,1583.1275215300893,2959.4703871708925,2291.086029029302),c(364.71127619560116,2457.3536883336274,2362.6856275948126,3381.8354824999487,5340.861396130856,4397.117490313019))
targetgene="R196Q"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(683.8336428667521,3623.819046719843,3027.0492445672503,4090.2971720290084,5210.115135625111,4219.658445870424),c(149.20006753456408,888.3434219553061,816.2829423552137,887.8916258316904,1287.7273204527974,1198.0211755171306),c(91.17781904890029,434.56552567329595,355.9900609715793,723.8917823314973,729.3832268465079,509.59056341881404),c(91.17781904890029,589.1793653339003,511.3105652808352,838.9561886582457,921.8022517417535,736.0752582716203),c(265.24456450589173,1210.3793483489908,976.1383518997762,1432.7943316549124,1712.03593945257,1351.312645813847),c(240.37788658346437,1463.799665425839,1020.353677944017,1405.9018841992356,1726.0150993808568,1476.9840313724164),c(207.2223160202279,1403.4179292270233,1107.6506037236718,1556.2350740744125,2024.5112790260455,1440.3874190943714),c(563.6446995750199,1278.9949576658269,1124.656498356072,1511.7082348445215,2284.3591929871463,1479.746039846231),c(70.45558744687749,364.12016677467744,207.47191451528346,521.0962769280328,576.4347711605434,400.491228703133),c(0.0,0.0,0.0,1.7634391774214306,0.8223035251933573,0.0),c(74.60003376728204,90.5726042982238,156.45423061808262,158.70952596792876,128.27934993016373,142.93393851991127),c(16.577785281618233,49.40323870812207,36.27924188245394,79.79562277831974,43.582086835247935,78.02673938526557),c(3618.1016377131796,4001.6623353578875,4013.391133246467,5480.768963425807,9043.694170076544,6053.632072483391),c(41.44446320404558,59.46686140792471,79.36084161786799,264.5158766132146,399.63951324397163,233.38971603734302),c(174.06674545699144,318.37642723012,306.1061033832051,727.4186606863401,812.435882891037,705.0026629412048),c(298.40013506912817,1956.0023029252775,1778.8165785490696,2403.1267390310545,3614.023993224805,2897.3468890316312),c(265.24456450589173,1498.5649074797027,1482.9140119453048,2093.2023035992383,3211.09526588006,2589.382944201291),c(493.1891121281424,1765.7083464199184,1840.0377992257106,2711.28773528545,3904.2971376180603,2881.4653403071966),c(103.61115801011395,150.03946570614852,123.57616766210873,564.3005367748578,961.2728209510346,493.7090146943795),c(3680.268332519248,4176.403420418097,4872.7556753370945,6835.5311114798205,11057.515503275075,9634.576058784163),c(368.8557225160057,464.7563937727039,510.1768389720085,1014.4183868116779,1651.1854785882613,1180.068120437335),c(0.0,5.489248745346897,2.267452617653371,30.860185604875035,47.69360446121472,24.167574145878717),c(103.61115801011395,174.74108506020954,97.50046255909496,237.1825693631824,262.314824536681,206.4601334176496),c(4.144446320404558,3.6594991635645977,2.267452617653371,4.849457737908934,7.400731726740215,4.833514829175743),c(845.4670493625299,1058.5101330610598,851.4284579288409,1349.4718305217498,2282.7145859367597,1289.8579572714698),c(20.72223160202279,57.637111826142416,48.75023127954748,111.53752797190549,148.01463453480432,117.38536013712519),c(37.30001688364102,54.892487453468966,111.10517826501518,148.56975069775552,275.47168093977467,276.200847381471),c(426.8779710016695,2264.315107455595,2561.0877316394826,3783.017895363324,5803.818280814716,4843.872360952549),c(571.9335922158291,1792.2397153557617,1611.0250848427202,2597.105048547412,3798.2199828681173,3340.6492490788924),c(605.0891627790655,2805.006108872264,2833.1820457578874,4261.350772238887,6807.850885075804,5924.508176332553))
targetgene="V197E"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(327.4112593119601,2289.931601600547,1953.4104301083792,2709.083436313673,3732.4357008526486,2857.2977661613177),c(236.23344026305983,1590.0523865688176,1352.5354864302358,1805.761717679545,2272.0246401092463,1971.3835481852495),c(24.86667792242735,326.61030034814036,217.67545129472364,601.7736192950632,720.3378880693809,433.63533038890955),c(62.16669480606838,320.2061768119023,297.0362929125916,520.6554171336774,645.5082672767854,440.5403515734463),c(178.211191777396,823.3873118020344,529.4501862220621,907.7303165776814,1258.1243935458367,899.7242603451419),c(211.36676234063248,1287.2288307838473,1030.5572147234573,1759.0305794778772,1749.0395980862709,1553.6297665207746),c(178.211191777396,704.4535889861851,623.5494698546771,910.3754753438136,1107.6428484354522,947.3689065184457),c(331.55570563236466,1105.1687473965085,973.8708992821229,1161.2246983320122,1480.146345348043,1383.76624538117),c(91.17781904890029,333.0144238843784,257.35587210365765,542.2575470570899,469.535312885407,352.8465825298293),c(0.0,0.0,0.0,0.8817195887107153,3.289214100773429,2.7620084738147104),c(16.577785281618233,105.21060095248218,49.883957588374166,195.30088889942346,161.99379446309138,177.45904444259514),c(0.0,2.7446243726734485,1.1337263088266856,7.494616504041081,4.111517625966786,3.452510592268388),c(103.61115801011395,186.63445734179447,165.5240410886961,268.9244745567682,327.2768030269562,214.05565672064006),c(24.86667792242735,167.42208673308033,155.3205043092559,231.0105322422074,246.69105755800717,233.38971603734302),c(4.144446320404558,72.2751084804008,62.354946985467706,122.55902283078943,109.36636885071651,100.81330929423693),c(298.40013506912817,1510.4582797612877,1376.3437389155963,2261.610745042985,2866.5500888240435,2369.8032705330215),c(261.1001181854872,971.5970279264006,1043.0282041205508,1566.3748493445858,1909.3887854989755,1815.3300694147183),c(343.98904459357834,1357.6741896824658,1270.9071921947145,1962.7078044700522,2870.6616064500104,2188.2012133797043),c(8.288892640809117,24.701619354061034,9.069810470613485,7.494616504041081,17.268374029060503,16.572050842888263),c(397.8668467588376,1149.0827373592838,1166.6043717826594,1323.0202428604284,2004.775994421405,1630.9660037875865),c(153.34451385496865,541.6058762075604,536.2525440750222,849.5368237227742,1573.8889472200858,994.3230505732957),c(0.0,2.7446243726734485,2.267452617653371,2.645158766132146,3.289214100773429,6.214519066083098),c(99.4667116897094,362.2904171928952,360.524966206886,377.8168437625415,664.4212483562327,393.5862075185962),c(45.588909524450145,175.6559598511007,123.57616766210873,301.54809933906466,319.0537677750226,257.55729018322177),c(0.0,10.978497490693794,5.668631544133428,9.698915475817868,4.933821151160144,6.905021184536776),c(58.022248485663816,236.9525708408077,261.89077733896437,384.4297406778719,562.4556112322564,393.5862075185962),c(33.155570563236466,150.95434049703965,53.28513651485422,244.23632607286814,492.55981159082097,334.20302533157997),c(290.1112424283191,949.6400329450131,886.5739735024681,1387.3857728363105,2119.898487948475,1800.8295249271912),c(650.6780723035157,3028.2355578497045,2972.6303817435696,3996.8348956256727,6529.089990035257,6384.3825872227035),c(306.6890277099373,1950.5130541799306,1867.2472306375512,3045.4594594068108,4271.866813379491,3645.851185435418))
targetgene="E198E"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(0.0,17.38262102693184,2.267452617653371,42.32254025811434,44.40439036044129,38.668118633405946),c(12.433338961213675,37.50986642653713,26.075705103013767,43.20425984682505,69.07349611624201,29.691591093508137),c(0.0,11.893372281584943,2.267452617653371,7.0537567096857225,6.578428201546858,6.214519066083098),c(0.0,2.7446243726734485,1.1337263088266856,19.838690745991094,27.13601633138079,15.191046605980906),c(0.0,10.063622699802643,5.668631544133428,12.344074241950015,6.578428201546858,17.26255296134194),c(0.0,11.893372281584943,14.738442014746912,18.075251568569666,27.13601633138079,26.929582619693427),c(4.144446320404558,2.7446243726734485,2.267452617653371,3.5268783548428613,7.400731726740215,2.071506355361033),c(4.144446320404558,12.808247072476092,15.872168323573598,17.634391774214308,28.780623381767505,29.691591093508137),c(16.577785281618233,13.723121863367242,9.069810470613485,32.18276498794111,38.64826568408779,45.573139817942725),c(0.0,1.8297495817822989,1.1337263088266856,7.494616504041081,16.446070503867144,5.524016947629421),c(0.0,6.404123536238046,2.267452617653371,26.010727866966104,13.979159928287073,5.524016947629421),c(8.288892640809117,0.9148747908911494,0.0,15.430092802437517,9.04533877712693,6.905021184536776),c(0.0,3.6594991635645977,5.668631544133428,3.967738149198219,11.512249352707002,0.6905021184536776),c(24.86667792242735,56.72223703525126,20.40707355888034,26.451587661321458,46.87130093602136,57.31167583165524),c(0.0,19.21237060871414,9.069810470613485,20.279550540346452,31.247533957347574,22.096067790517683),c(20.72223160202279,31.10574289029908,15.872168323573598,36.591362931494686,27.958319856574146,72.50272243763615),c(0.0,1.8297495817822989,2.267452617653371,18.51611136292502,10.689945827513645,4.143012710722066),c(4.144446320404558,13.723121863367242,15.872168323573598,104.92463105657512,78.9411384185623,48.335148291757434),c(4.144446320404558,118.01884802495827,11.337263088266855,48.05371758473399,20.55758812983393,31.763097448869168),c(82.88892640809117,204.93195315961748,108.83772564736182,162.23640432277162,194.06363194563232,278.96285585528574),c(8.288892640809117,22.871869772278735,22.67452617653371,58.63435264926257,56.73894323834165,13.119540250619874),c(8.288892640809117,18.297495817822988,15.872168323573598,34.827923754073254,37.825962158894434,25.548578382786072),c(29.011124242831908,48.48836391723092,53.28513651485422,112.86010735497156,110.18867237590987,110.48033895258841),c(66.31114112647293,93.31722867089724,201.80328297115003,223.9567755325217,421.8417084241923,226.48469485280626),c(12.433338961213675,45.74373954455747,12.470989397093541,40.559101080692905,64.13967496508187,35.21560804113756),c(0.0,73.18998327129195,60.08749436781434,122.99988262514479,144.72542043403087,129.8143982692914),c(0.0,2.7446243726734485,0.0,1.7634391774214306,2.466910575580072,2.7620084738147104),c(0.0,6.404123536238046,7.936084161786799,10.580635064528584,12.334552877900359,8.286025421444132),c(0.0,2.7446243726734485,3.401178926480057,6.172037120975007,4.933821151160144,5.524016947629421),c(8.288892640809117,42.99911517188402,26.075705103013767,89.05367845978225,102.78794064916966,52.478161002479496))
targetgene="D324A"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D16-REP1","D16-REP2","D16-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%__INDIVIDUAL_PAGE__









\end{document}

