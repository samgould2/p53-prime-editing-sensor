% This is a template file for Sweave used in MAGeCK
% Author: Wei Li, Shirley Liu lab
% Do not modify lines beginning with "#__".
\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage{fullpage}
\usepackage[utf8]{inputenc}

\begin{document}
\setkeys{Gin}{width=0.9\textwidth}

\title{MAGeCK Comparison Report}
\author{Wei Li}

\maketitle


\tableofcontents

\section{Summary}

%Function definition
<<label=funcdef,include=FALSE,echo=FALSE>>=
genreporttable<-function(comparisons,ngenes,direction,fdr1,fdr5,fdr25){
  xtb=data.frame(Comparison=comparisons,Genes=ngenes,Selection=direction,FDR1=fdr1,FDR5=fdr5,FDR25=fdr25);
  colnames(xtb)=c("Comparison","Genes","Selection","FDR1%","FDR5%","FDR25%");
  return (xtb);
}
@

The statistics of comparisons is as indicated in the following table. 

<<label=tab1,echo=FALSE,results=tex>>=
library(xtable)
comparisons=c("D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3_vs_D4-REP1,D4-REP2,D4-REP3 neg.","D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3_vs_D4-REP1,D4-REP2,D4-REP3 pos.");
ngenes=c(1210,1210);
direction=c("negative","positive");
fdr1=c(109,58);
fdr5=c(185,108);
fdr25=c(297,189);

cptable=genreporttable(comparisons,ngenes,direction,fdr1,fdr5,fdr25);
print(xtable(cptable, caption = "Summary of comparisons", label = "tab:one",
    digits = c(0, 0, 0, 0, 0, 0, 0),
    table.placement = "tbp",
    caption.placement = "top"))
@

The meanings of the columns are as follows.

\begin{itemize}
\item \textbf{Comparison}: The label for comparisons;
\item \textbf{Genes}: The number of genes in the library;
\item \textbf{Selection}: The direction of selection, either positive selection or negative selection;
\item \textbf{FDR1\%}: The number of genes with FDR $<$ 1\%;
\item \textbf{FDR5\%}: The number of genes with FDR $<$ 5\%;
\item \textbf{FDR25\%}: The number of genes with FDR $<$ 25\%;
\end{itemize}

The following figures show:

\begin{itemize}
\item Individual sgRNA read counts of selected genes in selected samples; 
\item The distribution of RRA scores and p values of all genes; and
\item The RRA scores and p values of selected genes.
\end{itemize}


\newpage\section{Comparison results of D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3 vs D4-REP1,D4-REP2,D4-REP3 neg.}

The following figure shows the distribution of RRA score in the comparison D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3 vs D4-REP1,D4-REP2,D4-REP3 neg., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('D34_NUT_D4_w_controls.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=3
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("H179PfsTer2","R175C","P301S","P177H","E298Q","H178R","H178TfsTer69","V10V","L111V","R280EfsTer65")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3_vs_D4-REP1,D4-REP2,D4-REP3 neg.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(53.420885413213284,39.20467506612883,35.04816001952922,0.0,0.0,13.451514020050503),c(48.56444128473935,21.954618037032144,24.938113860049636,33.750647766509445,10.506111442058959,0.0),c(48.56444128473935,15.68187002645153,16.85007693246597,12.750244711792458,66.53870579970675,1.1209595016708753),c(395.80019647062574,52.795629089053485,132.10460315053322,18.750359870283027,38.52240862088285,1256.5956013730513),c(174.83198862506168,64.818396109333,90.3164123580176,13.500259106603778,7.004074294705973,2050.234928556031),c(223.39642990980101,36.06830106083852,130.75659699593592,385.50739893301903,3.5020371473529863,3.3628785050126258),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.0,0.0,0.0,0.0),c(483.21619078315655,284.88730548053616,403.05384022458605,1493.2786600693403,38.52240862088285,106.49115265873316),c(677.473955922114,218.500722368558,450.9080587127894,46.50089247830191,38.52240862088285,33.62878505012626),c(687.1868441790618,304.7510075140414,299.9313693978943,16.500316685849064,194.36306167809073,19.05631152840488),c(733.3230633995643,217.45526436679455,182.65483394793114,2.250043184433963,199.6161173991202,71.74140810693602),c(111.69821495490051,156.81870026451531,164.45675086086788,0.0,57.78361293132427,4.483838006683501),c(1418.0816855143892,738.6160782458671,794.6496281350952,747.0143372320757,1220.4599458525158,31.386866046784508),c(689.6150662432988,233.1371343932461,334.30552634012486,2.250043184433963,8.755092868382466,49.32221807351851),c(1027.1379331722374,658.6385411109643,660.5230157526661,390.00748530188696,87.55092868382465,38.11262305680976),c(539.0652982606068,342.3874955775251,408.44586484297514,10.500201527358495,40.273427194559346,2067.049321081094),c(386.08730821367783,298.47825950346083,574.2506218584402,3085.5592202537746,5.2530557210294795,20.177271030075755),c(325.3817566077537,311.54648452550373,649.7389665158878,15.750302291037741,77.0448172417657,11.209595016708754),c(582.7732954168722,199.68247833681616,427.317951007337,70.50135311226418,68.28972437338324,357.58608103300924),c(172.4037665608247,148.97776525128955,138.8446339235196,51.00097884716983,3.5020371473529863,955.0574954235858),c(5050.7018936128925,1024.026112727285,1893.948647209175,72.75139629669815,320.43639898279827,782.4297321662709),c(2440.3631745581524,483.00159681470717,833.7418066184163,72.75139629669815,2120.483492722233,373.27951405640147),c(254.9633167448816,154.20505526010672,274.319252460546,70.50135311226418,61.285650078677264,1.1209595016708753),c(1102.4128171635832,483.5243258155889,843.8518527778958,33.750647766509445,3256.8945470382773,152.45049222723904),c(624.0530705089006,207.0006843491602,381.4857417510296,4.500086368867926,297.67315752500383,11.209595016708754),c(662.9046235366922,270.77362245672975,523.0263879837437,822.0157767132079,73.5427800944127,502.18985674855213),c(1141.2643701913748,464.1833527829653,591.1006987909062,1815.7848498382082,1969.895895386055,29.14494704344276),c(1163.1183687695075,308.41011052021344,409.7938709975724,459.00880962452845,574.3340921658897,216.34518382247893),c(1160.6901467052705,496.5925508376318,510.2203295150696,41.25079171462266,2885.6786094188606,182.71639877235268),c(315.6688683508058,98.79578116664464,141.54064623271415,3.7500719740566053,0.0,3.3628785050126258),c(403.08486266333665,77.36389213049422,176.5888062522434,79.50152585000004,40.273427194559346,96.40251714369528),c(167.54732243235077,189.75062732006353,198.15690472579982,152.25292214669818,218.87732170956164,314.98961996951596),c(900.870385831915,129.11406321778426,448.88604948089346,747.7643516268871,521.803534955595,1284.6195889148232),c(577.9168512883983,255.61448143115996,223.09501858584946,3.7500719740566053,24.514260031470904,8.967676013367003),c(1041.7072655576592,136.95499823101002,215.0069816582658,3.000057579245284,99.8080586995601,0.0),c(2.4282220642369676,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.0,0.0,0.0,0.0),c(811.0261694551472,233.1371343932461,326.89149248983983,549.7605513966984,57.78361293132427,38.11262305680976),c(1245.6779189535644,746.4570132590928,603.9067572595804,37.500719740566055,138.33046732044295,2831.543701220631),c(968.86060363055,132.7731662239563,408.44586484297514,169.50325322735856,2106.475344132821,10.088635515037877),c(548.7781865175547,153.1595972583433,258.1431786053787,200.2538434146227,693.4033551758913,962.9042119352819),c(199.11420926743133,75.27297612696735,177.93681240684066,375.75721180047185,28.01629717882389,20.177271030075755),c(745.464173720749,300.5691755069877,312.7374278665684,7.500143948113211,199.6161173991202,5.604797508354377),c(434.6517494984172,308.93283952109516,266.2312155329623,93.75179935141513,15.759167163088438,1411.288012603632),c(1107.2692612920573,819.6390733825333,1127.6071483206229,4446.835346836322,514.7994606608889,1209.5153023028745),c(490.50085697586746,291.68278249199847,272.2972432286501,26.250503818396236,1.7510185736764932,70.62044860526514),c(495.3573011043414,305.27373651492314,350.4816001952922,29.25056139764152,73.5427800944127,3.3628785050126258),c(390.9437523421518,151.06868125481643,322.17347094874935,0.750014394811321,127.824355878384,210.74038631412455),c(400.65664059909966,414.0013686983204,263.5352032237678,87.75168419292456,206.6201916938262,63.89469159523989),c(218.5399857813271,65.86385411109643,201.52692011229303,1.500028789622642,57.78361293132427,5.604797508354377),c(5074.984114255262,1720.301141901733,2027.4012565143057,88.50169858773589,1323.770041699429,424.84365113326174),c(2063.9887546014224,944.5713045932639,978.6524682376236,60.751165979717,224.13037743059112,15.693433023392254),c(653.1917352797443,360.6830106083852,335.6535324947221,2.250043184433963,1.7510185736764932,0.0),c(1153.4054805125597,311.023755524622,781.1695665891224,32.250618976886805,22.76324145779441,316.11057947118684),c(757.6052840419339,634.5930070704053,659.1750095980688,126.75243272311326,7.004074294705973,581.7779813671843),c(1092.6999289066355,469.9333717926642,459.6700987176717,35.25067655613209,61.285650078677264,41.475501561822384),c(961.5759374378392,614.2065760360183,589.752692636309,108.75208724764155,12.257130015735452,141.24089721053028),c(896.0139417034411,303.18282051139624,235.9010770545236,207.75398736273593,14.008148589411945,26.903028040101006),c(4144.975063652504,1317.7998112228104,1564.3611424101407,2224.5426950103783,1258.9823544733986,2726.173508063569))
targetgene="H179PfsTer2"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(48.56444128473935,45.47742307670944,58.63826772498158,0.0,1.7510185736764932,0.0),c(604.627293995005,44.954694075827724,173.89279394304882,20.250388659905667,10.506111442058959,4.483838006683501),c(2882.2995902492808,1898.5517312023987,2203.990062766549,951.7682670155664,2073.205991232968,586.2618193738678),c(5939.431169123623,2429.6443960982238,3697.580882060333,889.5170722462268,1772.0307965606112,2059.202604569398),c(5031.276117098997,2641.872370456201,3485.94391578856,349.5067079820756,985.8234569798657,2197.0806232749155),c(2301.954516896645,955.54861361178,1244.883683770586,258.7549662099058,390.47714192985796,548.149196317058),c(8025.273922303178,3029.737289110436,4674.21134106606,1432.5274940896231,1710.7451464819337,2838.2694582306563),c(2892.0124785062285,1244.095022098488,1575.8191947242176,489.00938541698133,1194.1946672473684,431.569408143287),c(1585.6290079467399,686.8659071585771,1082.448942141614,467.25896796745303,301.17519467235684,210.74038631412455),c(2326.236737539015,981.1623346549841,1377.6622899984177,582.7611847683964,1271.239484489134,249.97396887260518),c(1767.7456627645124,519.5926268764274,770.3855173523442,15.000287896226421,420.24445768235836,251.09492837427607),c(779.4592826200666,317.29650353520265,326.89149248983983,161.25309488443403,50.7795386366183,22.419190033417507),c(16011.696291578564,6639.181040198697,8904.254654192318,3993.076637975473,17368.353232297137,1069.395364594015),c(9618.187596442629,3896.4219725723237,4521.886645596568,1822.5349793915102,833.4848410700107,616.5277259189814),c(3508.7808828224183,1245.1404801002516,1664.7876009276379,169.50325322735856,3873.253084972403,110.97499066541666),c(281.67375945148825,118.65948320014992,119.29854468185907,24.750475028773593,96.30602155220713,36.991663555138885),c(1294.2423602383037,529.0017488922983,533.810437220522,388.5074565122643,474.52603346632964,86.3138816286574),c(1546.7774549189485,409.296807690385,934.842268213212,6.750129553301889,148.83657876250192,276.8769969127062),c(109.26999289066354,67.9547701146233,40.44018463791833,15.000287896226421,15.759167163088438,7.846716511696127),c(1296.6705823025407,188.70516931830008,318.80345556225615,43.50083489905662,47.27750148926532,339.65072900627524),c(53.420885413213284,12.022767020279508,36.3961661741265,17.250331080660384,0.0,1.1209595016708753),c(1000.4274904656306,400.9331436762775,385.5297602148214,3.7500719740566053,15.759167163088438,2.2419190033417506),c(1580.772563818266,700.4568611815017,601.2107449503859,480.0092126792455,1054.1131813532488,4169.9693462156565),c(82.5595501840569,23.522805039677298,22.242101550855082,0.750014394811321,63.036668652353754,0.0),c(116.55465908337445,48.61379708199975,43.136196947112886,0.0,0.0,12.330554518379628),c(395.80019647062574,134.86408222748315,94.36043082180944,1.500028789622642,117.31824443632505,3.3628785050126258),c(0.0,0.0,0.0,0.0,0.0,0.0),c(123.83932527608535,85.7275561446017,86.94639697152441,33.00063337169813,47.27750148926532,182.71639877235268),c(1651.191003681138,703.0705061859103,1052.1188036631752,462.7588815985851,4074.6202209451994,104.24923365539141),c(679.9021779863509,258.75085543645025,281.05928323353237,222.00426086415104,68.28972437338324,81.8300436219739))
targetgene="R175C"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(3103.2677980948447,880.2756374848126,1012.3526221025555,310.5059594518869,8.755092868382466,11.209595016708754),c(148.121545918455,108.72763218339728,90.99041543531624,8.250158342924532,3.5020371473529863,306.02194395614896),c(1964.4316499677068,1446.9138744405946,1303.5219514955675,2390.29587626368,1726.5043136450222,245.49013086592169),c(1367.0890221654129,477.25157780500825,585.0346710952185,15.000287896226421,4153.416056760641,5.604797508354377),c(186.9730989462465,191.31881432270868,199.5049108803971,3.000057579245284,420.24445768235836,5.604797508354377),c(135.98043559727017,185.5687953130098,124.01656622294955,99.00190011509437,45.52648291558882,28.023987541771884),c(675.045733857877,205.43249734651505,255.44716629618412,29.25056139764152,161.09370877823739,10.088635515037877),c(1510.3541239553938,763.7070702881896,972.5864405419359,165.75318125330196,19.261204310441425,2707.117196535164),c(19.42577651389574,3.136374005290306,9.436043082180944,0.0,0.0,0.0),c(24.282220642369676,1.0454580017634354,2.6960123091945554,6.750129553301889,0.0,0.0),c(755.1770619776969,641.9112130827493,490.67424027340905,41.25079171462266,28.01629717882389,85.19292212698653),c(1626.9087830387682,451.11512776092235,482.5862033458254,1342.5257667122646,12.257130015735452,3.3628785050126258),c(587.6297395453462,83.11391114019311,179.95882163873657,0.750014394811321,0.0,40.35454206015151),c(813.4543915193841,465.22881078472875,584.3606680179199,5.250100763679248,43.775464341912325,2367.4664675288886),c(279.24553738725126,308.93283952109516,284.4292986200256,321.0061609792454,912.280676885453,3.3628785050126258),c(206.39887546014225,164.65963527774107,113.90652006346997,77.25148266556607,1.7510185736764932,16.81439252506313),c(38.85155302779148,29.795553050257908,33.026150787633306,0.0,0.0,4.483838006683501),c(1080.5588185854506,392.0467506612883,391.59578791050916,6.750129553301889,7.004074294705973,8.967676013367003),c(417.6541950487584,77.88662113137593,97.05644313100399,1.500028789622642,3.5020371473529863,22.419190033417507),c(1376.8019104223606,752.7297612696735,737.3593665647109,12.000230316981137,1048.8601256322195,4815.642019178081),c(1252.9625851462754,262.40995844262227,494.7182587372009,3276.8128909306615,120.82028158367802,211.86134581579543),c(327.8099786719906,220.06890937120315,208.94095396257805,623.2619620882078,684.6482623075088,775.7039751562457),c(5298.380544165063,2969.623454009038,2538.9695921839725,6181.618642034908,7504.86560677745,5155.292748184355),c(274.38909325877734,320.43287754049294,139.51863700081825,688.5132144367927,3.5020371473529863,2.2419190033417506),c(223.39642990980101,151.06868125481643,74.8143415801489,0.0,1.7510185736764932,0.0),c(704.1843986287206,312.06921352638545,347.111584808799,3.7500719740566053,206.6201916938262,8.967676013367003),c(791.6003929412515,284.88730548053616,303.3013847843875,31.500604582075482,19.261204310441425,96.40251714369528),c(2700.182935431508,1211.6858240438216,1116.8230990838445,787.5151145518871,267.90584177250344,73.98332711027777),c(155.40621211116593,131.20497922131113,123.34256314565091,3.000057579245284,7.004074294705973,1.1209595016708753),c(1456.9332385421806,476.2061198032448,843.1778497005972,2636.3005977617936,2132.740622737969,1792.4142431717296))
targetgene="P301S"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(199.11420926743133,151.06868125481643,159.7387293197774,5.250100763679248,1138.1620728897205,13.451514020050503),c(121.41110321184838,47.045610079354596,39.76618156061969,12.750244711792458,1.7510185736764932,0.0),c(580.3450733526353,141.13683023806377,250.72914475509364,1.500028789622642,14.008148589411945,6.7257570100252515),c(1180.1159232191662,234.70532139589125,374.7457109780432,18.000345475471704,234.6364888726501,45.95933956850589),c(3525.778437272077,1210.1176370411765,1405.296416167662,368.2570678523586,2146.748771327381,691.6320125309301),c(3705.4668700256125,1878.6880291688933,2877.319136987889,1050.7701671306609,1272.9905030628106,914.7029533634343),c(6944.715103717727,2791.895593709254,4468.640402489976,3593.3189655410392,1952.3857096492898,1552.5289098141623),c(274.38909325877734,115.52310919485961,92.33842158991352,97.50187132547174,21.012222884117918,22.419190033417507),c(2182.971635749034,365.38757161632066,721.8572957868422,204.75392978349063,80.54685438911869,52.68509657853114),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.0,0.0,0.0,0.0),c(1675.4732243235076,165.70509327950452,646.3689511293946,27.000518213207556,7.004074294705973,100.88635515037878),c(1136.4079260629007,475.1606618014814,750.8394281106837,7.500143948113211,777.4522467123629,1681.439252506313),c(131.12399146879625,81.02299513666624,49.20222464280064,5.250100763679248,26.265278605147397,0.0),c(354.5204213785973,193.40973032623555,193.43888318470934,64.50123795377361,460.5178848769177,6.7257570100252515),c(82.5595501840569,30.841011052021344,38.418175406022414,0.0,92.80398440485413,31.386866046784508),c(915.4397182173368,473.59247479883624,633.5628926607205,10.500201527358495,3761.1878962571072,32.507825548455386),c(330.2382007362276,393.6149376639334,345.76357865420175,11.250215922169815,126.07333730470751,6.7257570100252515),c(1733.750553865195,616.2974920395452,692.2011603857021,296.2556859504718,133.0774115994135,5637.305333902832),c(65.56199573439812,21.954618037032144,12.806058468674138,5.250100763679248,14.008148589411945,4.483838006683501),c(16.99755444965877,8.886393014989201,11.45805231407686,3.7500719740566053,3.5020371473529863,1.1209595016708753),c(1702.1836670301143,567.1609659566637,866.7679574060495,9.750187132547174,630.3666865235375,15.693433023392254),c(2578.7718322196597,486.13797081999746,1076.3829144459262,3731.321614186322,204.8691731201497,2995.203788464579),c(104.4135487621896,79.45480813402109,87.62040004882304,2.250043184433963,8.755092868382466,0.0),c(157.8344341754029,57.500190096988945,75.48834465744756,6.750129553301889,0.0,28.023987541771884),c(3081.413799516712,1677.4373638294321,2506.617444473638,2361.0453148660386,1038.3540141901603,1222.966816322925),c(6966.56910229586,2900.1004968917696,4145.792928463928,753.7644667853776,1390.3087474991355,2472.836660685951),c(5009.422118520864,1626.7326507439054,2396.75494287396,1663.53192769151,572.5830735922133,464.0772336917424),c(138.40865766150716,41.81832007053742,71.44432619365571,1.500028789622642,1.7510185736764932,2.2419190033417506),c(126.26754734032232,9.931851016752637,68.74831388446117,52.50100763679247,14.008148589411945,0.0))
targetgene="P177H"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(43.70799715626542,1.0454580017634354,10.110046159479582,0.0,54.28157578397129,0.0),c(908.1550520246259,373.2285066295464,316.1074432530616,6.000115158490568,3.5020371473529863,2762.0442121170367),c(0.0,2.090916003526871,0.0,0.0,0.0,0.0),c(233.1093181667489,158.38688726716046,165.13075393816652,4.500086368867926,1.7510185736764932,282.48179442106056),c(92.27243844100477,94.09122015870919,138.8446339235196,0.750014394811321,1.7510185736764932,0.0),c(55.849107477450254,36.06830106083852,36.3961661741265,0.750014394811321,0.0,2.2419190033417506),c(492.92907904010445,329.8419995563639,274.319252460546,9.000172737735852,98.05704012588362,10.088635515037877),c(0.0,0.0,1.3480061545972777,0.0,0.0,0.0),c(211.25531958861617,75.79570512784906,132.10460315053322,426.00817625283037,0.0,0.0),c(1158.2619246410336,311.023755524622,581.6646557087254,30.000575792452842,1.7510185736764932,110.97499066541666),c(162.69087830387684,12.545496021161224,69.4223169617598,0.0,281.9139903619154,7.846716511696127),c(335.09464486470154,130.1595212195477,228.48704320423857,7.500143948113211,2437.4178545576783,6.7257570100252515),c(106.84177082642657,30.318282051139626,51.89823695199519,1.500028789622642,3.5020371473529863,0.0),c(633.7659587658485,89.90938815165545,288.47331708381745,3.000057579245284,3.5020371473529863,2.2419190033417506),c(165.1191003681138,60.113835101397534,64.03029234337069,0.750014394811321,7.004074294705973,112.09595016708754),c(760.0335061061709,124.40950220984881,251.40314783239228,2.250043184433963,19.261204310441425,2.2419190033417506),c(43.70799715626542,2.6136450044085886,8.088036927583666,0.750014394811321,0.0,7.846716511696127),c(157.8344341754029,131.72770822219286,118.62454160456043,0.0,1.7510185736764932,2.2419190033417506),c(2.4282220642369676,0.0,1.3480061545972777,0.0,1.7510185736764932,0.0),c(46.13621922050238,114.47765119309618,80.88036927583666,120.75231756462269,124.32231873103102,127.78938319047978),c(36.42333096355451,56.97746109610723,41.78819079251561,261.0050093943397,68.28972437338324,81.8300436219739),c(38.85155302779148,94.6139491595909,80.20636619853802,319.50613218962275,609.3544636394196,230.9176573442003),c(19.42577651389574,71.61387312079532,51.22423387469655,159.00305170000007,21.012222884117918,93.03963863868265),c(19.42577651389574,20.90916003526871,12.132055391375498,29.25056139764152,15.759167163088438,26.903028040101006),c(611.9119601877159,776.2525663093508,713.0952557819598,1418.2772205882081,2425.160724541943,1321.611252469962),c(626.4812925731377,767.3661732943616,709.0512373181681,750.7644092061323,2069.703954085615,272.3931589060227),c(87.41599431253084,140.61410123718207,124.69056930024819,76.50146827075474,122.57130015735453,226.4338193375168),c(393.37197440638874,340.2965795739982,390.92178483321055,1224.0234923320759,443.0076991401528,930.3963863868265),c(53.420885413213284,10.977309018516072,37.070169251425135,77.25148266556607,5.2530557210294795,12.330554518379628),c(582.7732954168722,240.45534040559014,339.02354788121534,5.250100763679248,5.2530557210294795,438.29516515331227))
targetgene="E298Q"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(31.56688683508058,230.5234893888375,68.07431080716252,0.0,0.0,0.0),c(599.770849866531,146.88684924776268,155.69471085598556,6.000115158490568,19.261204310441425,4.483838006683501),c(138.40865766150716,27.704637046731037,72.792332348253,7.500143948113211,19.261204310441425,0.0),c(811.0261694551472,230.00076038795578,243.98911398210726,2080.5399312066047,75.29379866808921,363.1908785413636),c(1452.0767944137067,331.41018655900905,318.80345556225615,63.001209164150964,141.83250446779596,25.78206853843013),c(667.7610676651661,424.9786777168365,344.4155724996044,317.2560890051888,61.285650078677264,7.846716511696127),c(5529.061640267575,2314.1212869033643,3179.946518694978,1836.7852528929252,1637.2023663875211,591.8666168822222),c(3129.978240801451,2303.66670688573,2815.3108538764145,1353.0259682396231,935.0439183432474,526.8509657853114),c(3499.06799456547,1641.8917917694753,1807.0022502376507,486.009327837736,227.6324145779441,197.28887229407405),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.0,0.0,0.0,0.0),c(1403.5123531289673,883.4120114901029,805.4336773718734,219.75421767971707,651.3789094076554,197.28887229407405),c(2469.501839328996,913.7302935412425,1975.5030195623106,358.5068807198115,2015.4223783016437,78.46716511696127),c(811.0261694551472,626.7520720571795,1031.898711344216,4.500086368867926,141.83250446779596,31.386866046784508),c(390.9437523421518,108.20490318251557,184.0028401025284,21.75041744952831,10.506111442058959,69.49948910359427),c(257.3915388091186,154.72778426098844,342.39356326770854,418.5080323047171,539.3137206923599,187.20023677903617),c(116.55465908337445,86.25028514548342,104.47047698128902,1.500028789622642,1.7510185736764932,4.483838006683501),c(1529.7799004692897,454.7742307670944,765.6674958112537,112.50215922169815,2966.2254638079794,85.19292212698653),c(662.9046235366922,468.36518479001904,521.0043787518479,114.0021880113208,283.6650089355919,85.19292212698653),c(1558.9185652401331,459.47879177502983,731.2933388690232,1212.0232620150948,413.2403833876524,30.265906545113634),c(968.86060363055,412.4331816956753,1085.8189575281071,1569.780128340095,129.5753744520605,16.81439252506313),c(825.595501840569,356.50117860133145,485.28221565501997,14.2502735014151,43.775464341912325,4.483838006683501),c(342.37931105741245,304.2282785131597,114.5805231407686,8.250158342924532,178.6038945150023,69.49948910359427),c(1835.7358805631475,702.0250481841468,1544.1410500911816,1650.0316685849064,8.755092868382466,1715.0680375564393),c(182.11665481777257,111.34127718780587,241.2931016729127,76.50146827075474,1591.6758834719324,26.903028040101006),c(2141.6918606570052,821.7299893860602,1127.6071483206229,22.50043184433963,2038.185619759438,151.32953272556816),c(1347.663245651517,755.8661352749638,829.6977881546244,8.250158342924532,241.64056316735605,39.233582558480634),c(301.099535965384,51.75017108729005,180.6328247160352,22.50043184433963,21.012222884117918,4.483838006683501),c(286.5302035799622,53.84108709081692,191.41687395281343,37.500719740566055,1251.9782801786926,60.53181309022727),c(1847.8769908843324,655.502167105674,1118.171105238442,15.000287896226421,1703.741072187228,66.13661059858164))
targetgene="H178R"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(104.4135487621896,25.090992042322448,103.12247082669174,3.7500719740566053,17.51018573676493,4.483838006683501),c(286.5302035799622,65.86385411109643,86.27239389422577,24.000460633962273,8.755092868382466,40.35454206015151),c(72.84666192710903,17.250057029096684,24.264110782750997,0.0,22.76324145779441,0.0),c(388.5155302779148,92.00030415518232,260.1651878372746,33.00063337169813,82.29787296279518,23.540149535088382),c(2039.7065339590529,249.86446242146107,787.9095973621088,45.75087808349058,106.81213299426608,15.693433023392254),c(262.2479829375925,122.84131520720366,198.15690472579982,1.500028789622642,5.2530557210294795,5.604797508354377),c(2433.0785083654414,955.0258846108983,1178.1573791180208,141.75272061933967,206.6201916938262,547.0282368153871),c(2926.007587405546,1785.6422670119478,2421.0190536567106,1131.021707375472,1320.2680045520758,971.8718879486489),c(3489.3551063085224,1668.0282418135612,1954.6089241660527,492.7594573910379,2078.4590469539976,419.2388536249074),c(0.0,0.0,0.0,0.0,0.0,0.0),c(653.1917352797443,158.90961626804219,489.3262341188118,26.250503818396236,241.64056316735605,42.596461063493265),c(871.7317210610714,353.8875335969229,546.6164956891961,115.50221680094344,597.0973336236842,109.85403116374579),c(449.221081883839,450.06966975915896,429.33996023923294,84.00161221886796,47.27750148926532,993.1701184803956),c(393.37197440638874,98.27305216576293,120.64655083645636,72.00138190188682,26.265278605147397,80.70908412030302),c(1063.5612641357918,544.6836189187499,653.7829849796797,25.500489423584916,2950.466296644891,42.596461063493265),c(184.54487688200953,44.954694075827724,59.31227080228022,57.75110840047172,33.269352899853374,44.838380066835015),c(1187.4005894118773,383.6830866471808,591.1006987909062,383.25735574858504,61.285650078677264,34.749744551797136),c(140.83687972574413,61.68202210404269,72.792332348253,28.5005470028302,5.2530557210294795,12.330554518379628),c(1556.4903431758962,605.8429120219108,672.6550711440416,45.00086368867926,1649.4594964032565,134.51514020050504),c(43.70799715626542,46.00015207759116,74.8143415801489,0.0,8.755092868382466,0.0),c(1813.8818819850148,1203.8448890305958,972.5864405419359,175.50336838584911,901.774565443394,350.860324022984),c(298.671313901147,99.31851016752637,132.77860622783186,0.750014394811321,8.755092868382466,3.3628785050126258),c(327.8099786719906,60.63656410227925,36.3961661741265,6.750129553301889,24.514260031470904,4.483838006683501),c(398.22841853486267,161.00053227156906,162.43474162897195,225.75433283820763,478.02807061368264,0.0),c(672.61751179364,115.00038019397789,279.7112770789351,185.2535555183963,73.5427800944127,24.661109036759257),c(99.55710463371567,120.22767020279507,83.57638158503121,18.750359870283027,0.0,20.177271030075755),c(427.3670833057063,203.34158134298818,181.98083087063247,6.750129553301889,54.28157578397129,0.0),c(2037.278311894816,507.5698598561479,562.1185664670647,618.7618757193399,961.3091969483947,151.32953272556816),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.0,0.0,0.0,0.0))
targetgene="H178TfsTer69"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(72.84666192710903,27.18190804584932,47.18021541090472,52.50100763679247,1.7510185736764932,1.1209595016708753),c(240.3939843594598,299.5237175052242,70.77032311635708,12.750244711792458,1.7510185736764932,8.967676013367003),c(87.41599431253084,139.0459142345369,95.03443389910808,582.0111703735852,3.5020371473529863,17.935352026734005),c(19.42577651389574,20.90916003526871,6.740030772986389,0.0,54.28157578397129,31.386866046784508),c(82.5595501840569,73.18206012344048,57.2902615703843,0.750014394811321,3.5020371473529863,75.10428661194865),c(111.69821495490051,19.340973032623555,50.550230797397916,4.500086368867926,5.2530557210294795,5.604797508354377),c(118.98288114761141,79.45480813402109,88.2944031261217,33.00063337169813,0.0,0.0),c(9.71288825694787,27.18190804584932,9.436043082180944,0.750014394811321,3.5020371473529863,191.68407478571967),c(4.856444128473935,23.522805039677298,64.03029234337069,2.250043184433963,5.2530557210294795,0.0),c(148.121545918455,61.15929310316097,139.51863700081825,39.000748530188694,14.008148589411945,13.451514020050503),c(16.99755444965877,37.11375906260196,25.612116937348276,45.75087808349058,8.755092868382466,1.1209595016708753),c(213.68354165285314,141.13683023806377,165.13075393816652,39.000748530188694,24.514260031470904,26.903028040101006),c(12.141110321184838,19.340973032623555,41.78819079251561,1.500028789622642,0.0,1.1209595016708753),c(106.84177082642657,127.0231472142574,86.94639697152441,9.750187132547174,483.2811263347121,54.927015581872894),c(155.40621211116593,128.06860521602084,140.86664315541552,21.00040305471699,3.5020371473529863,11.209595016708754),c(50.99266334897632,46.52288107847288,12.806058468674138,0.750014394811321,1421.8270818253125,0.0),c(118.98288114761141,66.90931211285987,33.70015386493194,0.0,3.5020371473529863,1.1209595016708753),c(12.141110321184838,12.545496021161224,22.91610462815372,0.0,1.7510185736764932,0.0),c(106.84177082642657,62.72748010580612,46.50621233360608,2.250043184433963,5.2530557210294795,29.14494704344276),c(203.9706533959053,116.56856719662305,113.90652006346997,36.00069095094341,5.2530557210294795,2.2419190033417506),c(24.282220642369676,5.750019009698895,54.594249261189745,4.500086368867926,0.0,1.1209595016708753),c(72.84666192710903,69.00022811638674,32.35214771033466,457.50878083490585,22.76324145779441,6.7257570100252515),c(223.39642990980101,238.36442440206326,380.1377355964323,44.250849293867944,12.257130015735452,989.8072399753829),c(303.52775802962094,92.52303315606403,57.2902615703843,18.750359870283027,1094.3866085478082,28.023987541771884),c(276.8173153230143,147.9323072495261,98.40444928560127,87.75168419292456,8.755092868382466,86.3138816286574),c(199.11420926743133,102.45488417281666,89.64240928071897,27.000518213207556,35.02037147352986,12.330554518379628),c(128.6957694045593,44.954694075827724,81.5543723531353,15.000287896226421,110.31417014161907,20.177271030075755))
targetgene="V10V"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(58.27732954168722,78.93207913313937,51.22423387469655,48.00092126792455,29.767315752500384,62.773732093569016),c(128.6957694045593,46.00015207759116,118.62454160456043,0.0,5.2530557210294795,0.0),c(60.70555160592419,21.431889036150427,31.004141555737387,70.50135311226418,1.7510185736764932,1.1209595016708753),c(50.99266334897632,81.02299513666624,37.74417232872378,2.250043184433963,812.4726181858928,0.0),c(9.71288825694787,15.159141025569813,19.546089241660525,0.0,0.0,17.935352026734005),c(138.40865766150716,99.84123916840808,115.25452621806724,2.250043184433963,1.7510185736764932,131.1522616954924),c(123.83932527608535,69.52295711726845,183.32883702522977,2.250043184433963,1.7510185736764932,4.483838006683501),c(208.8270975243792,133.295895224838,141.54064623271415,4.500086368867926,5.2530557210294795,21.298230531746633),c(104.4135487621896,86.25028514548342,226.46503397234264,1402.5269182971704,17.51018573676493,356.46512153133835),c(16.99755444965877,25.090992042322448,6.066027695687749,7.500143948113211,3.5020371473529863,23.540149535088382),c(92.27243844100477,29.795553050257908,73.46633542555163,0.0,0.0,16.81439252506313),c(318.09709041504277,222.68255437561174,379.46373251913366,9.000172737735852,0.0,0.0),c(55.849107477450254,39.727404067010546,14.154064623271415,3.7500719740566053,5.2530557210294795,8.967676013367003),c(531.7806320678959,509.66077585967474,524.374394138341,28.5005470028302,7.004074294705973,7.846716511696127),c(150.549767982692,196.54610433152587,232.5310616680304,2.250043184433963,393.979179077211,10.088635515037877),c(16.99755444965877,21.954618037032144,18.87208616436189,41.25079171462266,7.004074294705973,28.023987541771884),c(471.0750804619717,180.3415053041926,456.3000833311785,5.250100763679248,3.5020371473529863,3.3628785050126258),c(80.13132811981993,46.52288107847288,49.20222464280064,208.50400175754726,259.150748904121,45.95933956850589),c(123.83932527608535,131.20497922131113,174.56679702034745,3.000057579245284,1054.1131813532488,6.7257570100252515),c(723.6101751426163,341.34203757576165,520.3303756745491,89.2517129825472,38.52240862088285,17.935352026734005),c(72.84666192710903,46.52288107847288,56.61625849308566,666.7627969872644,38.52240862088285,13.451514020050503))
targetgene="L111V"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(310.81242422233186,173.02329929184856,144.91066161920736,32.250618976886805,15.759167163088438,12.330554518379628),c(87.41599431253084,53.84108709081692,115.92852929536588,0.750014394811321,10.506111442058959,2.2419190033417506),c(512.3548555540002,340.2965795739982,187.3728554890216,66.75128113820757,828.2317853489812,6.7257570100252515),c(395.80019647062574,304.7510075140414,295.88735093410247,1061.2703686580194,140.08148589411945,94.16059814035353),c(94.70066050524174,113.43219319133274,121.32055391375499,57.0010940056604,12.257130015735452,11.209595016708754),c(920.2961623458108,204.38703934475163,492.0222464280063,42.7508205042453,369.46491904574003,150.2085732238973),c(19.42577651389574,9.931851016752637,4.718021541090472,2.250043184433963,0.0,6.7257570100252515),c(325.3817566077537,460.5242497767933,324.8694832579439,24.000460633962273,201.36713597279672,8.967676013367003),c(0.0,5.750019009698895,0.0,1.500028789622642,0.0,0.0),c(0.0,4.704561007935459,2.0220092318959164,5.250100763679248,0.0,0.0),c(14.569332385421806,6.272748010580612,3.3700153864931943,1.500028789622642,1.7510185736764932,1.1209595016708753),c(1143.6925922556118,378.4557966383636,593.7967111001008,635.2621924051889,70.04074294705973,11.209595016708754),c(29.13866477084361,2.6136450044085886,9.436043082180944,2.250043184433963,1.7510185736764932,0.0),c(46.13621922050238,11.50003801939779,8.088036927583666,3.7500719740566053,3.5020371473529863,13.451514020050503),c(393.37197440638874,298.47825950346083,411.1418771521697,64.50123795377361,5.2530557210294795,16.81439252506313),c(50.99266334897632,7.3182060123440476,14.828067700570054,9.000172737735852,0.0,1.1209595016708753),c(36.42333096355451,21.954618037032144,35.722163096827856,1.500028789622642,33.269352899853374,0.0),c(21.85399857813271,39.727404067010546,9.436043082180944,189.0036274924529,22.76324145779441,32.507825548455386),c(522.0677438109481,172.50057029096683,200.17891395769573,51.75099324198115,28.01629717882389,22.419190033417507),c(46.13621922050238,9.409122015870919,25.612116937348276,0.0,7.004074294705973,7.846716511696127),c(1063.5612641357918,311.023755524622,387.55176944671734,246.75473589292463,7.004074294705973,29.14494704344276),c(495.3573011043414,159.4323452689239,440.7980125533098,1.500028789622642,8.755092868382466,25.78206853843013),c(101.98532669795264,32.931927055548215,53.246243106592466,24.000460633962273,98.05704012588362,91.91867913701178),c(815.8826135836212,328.7965415546004,436.75399408951796,1158.0222255886797,2015.4223783016437,2959.333084411111),c(38.85155302779148,7.3182060123440476,11.45805231407686,3.000057579245284,1.7510185736764932,14.57247352172138),c(9.71288825694787,5.750019009698895,4.044018463791833,4.500086368867926,3.5020371473529863,2.2419190033417506),c(1607.4830065248725,419.2286587071376,742.0773881058013,347.25666479764163,274.90991606720945,16.81439252506313),c(60.70555160592419,12.022767020279508,18.19808308706325,27.000518213207556,21.012222884117918,3.3628785050126258),c(14.569332385421806,7.840935013225765,4.044018463791833,44.250849293867944,0.0,109.85403116374579),c(118.98288114761141,41.2955910696557,48.528221565501994,39.75076292500002,1.7510185736764932,7.846716511696127),c(420.0824171129954,420.79684570978276,258.1431786053787,10.500201527358495,52.530557210294795,7.846716511696127),c(531.7806320678959,264.50087444614917,425.96994485273973,6.750129553301889,15.759167163088438,24.661109036759257),c(16.99755444965877,9.931851016752637,12.132055391375498,0.750014394811321,0.0,1.1209595016708753),c(0.0,1.0454580017634354,1.3480061545972777,1.500028789622642,0.0,5.604797508354377),c(21.85399857813271,41.2955910696557,12.132055391375498,5.250100763679248,28.01629717882389,1.1209595016708753),c(0.0,2.6136450044085886,3.3700153864931943,2.250043184433963,0.0,0.0),c(63.13377367016116,23.522805039677298,15.502070777868694,18.750359870283027,5.2530557210294795,20.177271030075755),c(1588.0572300109768,720.8432922158887,1077.7309206005234,848.2662805316041,532.309646397654,72.8623676086069),c(0.0,3.6591030061720238,3.3700153864931943,3.000057579245284,0.0,0.0),c(1743.4634421221429,231.04621838971923,564.1405756989607,2994.0574640867935,43.775464341912325,936.0011838951809),c(315.6688683508058,47.045610079354596,268.9272278421569,18.000345475471704,15.759167163088438,56.04797508354377),c(55.849107477450254,25.613721043204166,33.70015386493194,15.750302291037741,1.7510185736764932,91.91867913701178),c(4.856444128473935,7.3182060123440476,2.0220092318959164,3.000057579245284,1.7510185736764932,0.0),c(84.98777224829387,21.431889036150427,17.52408000976461,24.000460633962273,42.024445768235836,23.540149535088382),c(1515.2105680838679,336.6374765678262,938.8862866770039,201.00385780943404,127.824355878384,44.838380066835015),c(369.08975376401906,89.90938815165545,183.32883702522977,37.500719740566055,3.5020371473529863,6.7257570100252515),c(70.41843986287206,72.65933112255875,91.66441851261489,6.750129553301889,38.52240862088285,8.967676013367003),c(9.71288825694787,8.363664014107483,4.718021541090472,3.7500719740566053,33.269352899853374,3.3628785050126258),c(276.8173153230143,40.250133067892264,158.39072316518013,114.75220240613211,40.273427194559346,0.0),c(92.27243844100477,145.3186622451175,51.89823695199519,198.00380023018874,5.2530557210294795,20.177271030075755),c(16.99755444965877,9.931851016752637,5.392024618389111,0.750014394811321,0.0,1.1209595016708753),c(48.56444128473935,40.250133067892264,41.78819079251561,3.7500719740566053,36.77139004720635,94.16059814035353),c(123.83932527608535,74.22751812520391,82.90237850773258,37.500719740566055,59.53463150500077,23.540149535088382),c(395.80019647062574,226.34165738178376,322.847474026048,1475.2783145938686,255.648711756768,1302.554940941557))
targetgene="R280EfsTer65"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@

\newpage\section{Comparison results of D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3 vs D4-REP1,D4-REP2,D4-REP3 pos.}

The following figure shows the distribution of RRA score in the comparison D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3 vs D4-REP1,D4-REP2,D4-REP3 pos., and the RRA scores of 10 genes.

<<echo=FALSE>>=
gstable=read.table('D34_NUT_D4_w_controls.gene_summary.txt',header=T)
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=# 
#
# parameters
# Do not modify the variables beginning with "__"

# gstablename='__GENE_SUMMARY_FILE__'
startindex=9
# outputfile='__OUTPUT_FILE__'
targetgenelist=c("N345S","I254_I255insH","L22L","A347P","R196P","N239T","E346Ter","I255F","I254TfsTer91","E271_V272insQL*")
# samplelabel=sub('.\w+.\w+$','',colnames(gstable)[startindex]);
samplelabel='D34-NUT-REP1,D34-NUT-REP2,D34-NUT-REP3_vs_D4-REP1,D4-REP2,D4-REP3 pos.'


# You need to write some codes in front of this code:
# gstable=read.table(gstablename,header=T)
# pdf(file=outputfile,width=6,height=6)


# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")

######
# function definition

plotrankedvalues<-function(val, tglist, ...){
  
  plot(val,log='y',ylim=c(max(val),min(val)),type='l',lwd=2, ...)
  if(length(tglist)>0){
    for(i in 1:length(tglist)){
      targetgene=tglist[i];
      tx=which(names(val)==targetgene);ty=val[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      # text(tx+50,ty,targetgene,col=colors[i])
    }
    legend('topright',tglist,pch=20,pt.cex = 2,cex=1,col=colors)
  }
}



plotrandvalues<-function(val,targetgenelist, ...){
  # choose the one with the best distance distribution
  
  mindiffvalue=0;
  randval=val;
  for(i in 1:20){
    randval0=sample(val)
    vindex=sort(which(names(randval0) %in% targetgenelist))
    if(max(vindex)>0.9*length(val)){
      # print('pass...')
      next;
    }
    mindiffind=min(diff(vindex));
    if (mindiffind > mindiffvalue){
      mindiffvalue=mindiffind;
      randval=randval0;
      # print(paste('Diff: ',mindiffvalue))
    }
  }
  plot(randval,log='y',ylim=c(max(randval),min(randval)),pch=20,col='grey', ...)
  
  if(length(targetgenelist)>0){
    for(i in 1:length(targetgenelist)){
      targetgene=targetgenelist[i];
      tx=which(names(randval)==targetgene);ty=randval[targetgene];
      points(tx,ty,col=colors[(i %% length(colors)) ],cex=2,pch=20)
      text(tx+50,ty,targetgene,col=colors[i])
    }
  }
  
}




# set.seed(1235)



pvec=gstable[,startindex]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='RRA score',main=paste('Distribution of RRA scores in \n',samplelabel))


pvec=gstable[,startindex+1]
names(pvec)=gstable[,'id']
pvec=sort(pvec);

plotrankedvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))

# plotrandvalues(pvec,targetgenelist,xlab='Genes',ylab='p value',main=paste('Distribution of p values in \n',samplelabel))



# you need to write after this code:
# dev.off()




@
%%
\clearpage
\newpage
The following figures show the distribution of sgRNA read counts (normalized) of selected genes in selected samples.
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(1828.4512143704367,2148.9389226247413,2313.852564366227,10277.447252099531,13514.361351635174,9280.423714333177),c(3960.4301867704944,4640.78806982789,4699.823458003409,22083.423840824536,29802.336123973913,15441.217135516308),c(1532.2081225335266,2349.1441299624394,1821.156314860922,10408.699771191514,8292.823964931871,7782.821820100888),c(1891.5849880405979,2356.4623359747834,2365.7508013182223,11497.720672457552,15324.914556816668,7391.606954017752),c(3035.2775802962096,4408.173664435525,3726.563014384174,19283.620104993875,18392.699097897883,20703.001036359397),c(1121.8385936774791,1764.733106976679,1506.3968777624577,6498.874731040097,8826.884629903201,9014.756312437179),c(0.0,3.6591030061720238,0.0,0.0,3.5020371473529863,1.1209595016708753),c(41.27977509202845,105.06852917722526,71.44432619365571,22.50043184433963,3.5020371473529863,284.7237134244023),c(169.97554449658773,189.2278983191818,179.28481856143793,40.500777319811334,22.76324145779441,4.483838006683501),c(191.82954307472045,246.20535941528902,248.0331324458991,82.50158342924531,82.29787296279518,130.03130219382155),c(0.0,2.090916003526871,0.6740030772986388,0.0,1.7510185736764932,12.330554518379628),c(177.26021068929865,202.29612334122476,174.56679702034745,430.5082626216983,68.28972437338324,90.7977196353409),c(4703.466138427007,5372.608671062295,5693.303993941602,34209.65657613397,28401.52126503272,33072.78913729751),c(2406.368065658835,3239.8743474648863,3791.2673098048435,36302.946752052376,21085.76566421233,22188.272376073306),c(1864.8745453339911,2566.5993943292337,2560.537690657529,18491.60490407312,13183.418841210318,14453.651814544266),c(376.37441995673,674.3204111374158,551.3345172302866,3567.8184761174543,2588.005451893857,2461.6270656692423),c(1068.4177082642657,1452.6638934502935,1227.3596037608213,9170.426005358022,7328.012730836124,7628.129408870306),c(541.4935203248438,920.5257705527049,824.3057635362353,5218.600159097172,5773.108237411398,7325.470343419171),c(393.37197440638874,695.2295711726846,461.6921079495676,2991.80742090236,1829.8144094919353,2661.157856966658),c(337.5228669289385,582.3201069822335,481.91220026852676,1951.5374552990575,1824.561353770906,1745.3339441015528),c(242.82220642369677,478.8197648076534,268.9272278421569,1185.7727581966985,1360.5414317466352,1365.3286730351263),c(2.4282220642369676,4.704561007935459,5.392024618389111,402.0077156188681,182.1059316623553,80.70908412030302),c(114.12643701913748,92.00030415518232,130.75659699593592,181.5034835443397,103.3100958469131,68.37852960192339),c(1136.4079260629007,423.93321971507305,781.8435696664211,3456.8163456853786,1498.8718990670782,2712.7219940435184),c(7.284666192710903,2.090916003526871,10.110046159479582,27.75053260801888,78.79583581544219,283.60275392273144),c(371.51797582825606,181.38696330595604,228.48704320423857,352.5067655613209,418.49343910868186,1239.7812088479882),c(3513.637326950892,1459.4593704617557,1796.892204078171,3012.807823957077,5107.72117941433,6729.119888530265))
targetgene="N345S"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(194.2577651389574,329.8419995563639,234.55307089992633,1454.2779115391515,245.14260031470906,1080.6049596107239),c(94.70066050524174,120.75039920367679,87.62040004882304,141.75272061933967,217.12630313588517,28.023987541771884),c(458.93397014078687,394.13766666481513,171.8707847111529,29.25056139764152,164.59574592559036,43.71742056516414),c(9897.43313382988,10767.17196016162,12305.948185318548,106134.53700975004,157796.54080400453,103141.72566774058),c(1165.5465908337444,1213.2540110464668,1392.4903576989877,26556.509691479256,35437.11389406487,25416.635740885427),c(364.23330963554514,470.45610079354594,585.7086741725171,16634.56926252029,9968.548739940275,9002.4257579188),c(5463.499644533177,14265.797163062958,16955.22141252456,301281.5324101025,401496.30181400414,313386.6478821266),c(6296.379812566457,13814.159306301153,14389.96570032594,108490.3322238524,161244.29637557355,90858.25144843113),c(3302.382007362276,7103.887121982543,7001.54396697826,18328.101766004253,26526.180372625196,21917.000176668953),c(29.13866477084361,15.68187002645153,8.762040004882305,63.001209164150964,7.004074294705973,21.298230531746633),c(434.6517494984172,105.59125817810697,272.2972432286501,154.50296533113215,243.39158174103255,31.386866046784508),c(31.56688683508058,25.613721043204166,50.550230797397916,241.50463512924537,197.86509882544374,468.5610716984259),c(235.53754023098585,354.9329915986863,215.0069816582658,11205.215058481137,8128.2282190062815,3013.139140491313),c(191.82954307472045,174.06875729361198,235.22707397722496,708.0135887018871,868.5052125435407,1289.1034269215065),c(41.27977509202845,29.27282404937619,28.98213232384147,33.00063337169813,42.024445768235836,12.330554518379628),c(6323.090255273064,16766.532703281096,19673.475823269968,536609.0489836818,738709.2097511969,417129.20784276276),c(7073.410873122287,12871.156188710534,14946.692242174615,164076.89908089864,207784.61904532107,149733.28639518883),c(4492.21081883839,9662.12285229767,10571.73826742915,79278.77157474107,89725.69375233086,73199.77641860984),c(48.56444128473935,23.522805039677298,16.85007693246597,34.50066216132077,31.518334326176877,60.53181309022727),c(713.8972868856684,276.52364146642867,334.9795294174235,774.7648698400947,2631.7809162357694,356.46512153133835),c(43.70799715626542,21.954618037032144,23.59010770545236,8.250158342924532,70.04074294705973,147.96665422055554),c(279.24553738725126,93.04576215694576,101.10046159479583,14.2502735014151,24.514260031470904,15.693433023392254),c(1262.6754734032231,550.9563669293304,558.074548003273,236.25453436556612,199.6161173991202,215.22422432080805),c(1362.2325780369388,986.912353664683,1269.8217976306355,270.7551965268869,4232.211892576084,890.041844326675),c(12.141110321184838,14.636412024688095,20.894095396257804,0.750014394811321,10.506111442058959,42.596461063493265),c(4.856444128473935,2.6136450044085886,3.3700153864931943,6.000115158490568,164.59574592559036,4.483838006683501),c(310.81242422233186,157.86415826627874,173.21879086575018,125.25240393349061,45.52648291558882,15.693433023392254))
targetgene="I254_I255insH"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(24.282220642369676,73.18206012344048,57.96426464768294,155.25297972594345,122.57130015735453,334.04593149792083),c(33.99510889931754,121.79585720544023,88.96840620342033,406.507801987736,119.06926301000154,632.2211589423737),c(65.56199573439812,200.20520733769789,153.67270162408965,755.2644955750003,367.7139004720636,1230.8135328346211),c(58.27732954168722,161.52326127245078,160.41273239707604,744.7642940476418,355.4567704563281,1324.9741309749747),c(43.70799715626542,95.65940716135434,84.25038466232985,168.00322443773592,320.43639898279827,286.9656324277441),c(72.84666192710903,263.4554164443857,192.09087703011207,531.7602059212267,593.5952964763312,892.2837633300168),c(94.70066050524174,336.6374765678262,357.2216309682786,2508.7981506438687,626.8646493761845,2821.4550657055934),c(114.12643701913748,384.2058156480625,341.0455571131113,2016.7887076476422,1472.6066204619308,1670.2296574896043),c(199.11420926743133,521.6835428799543,404.4018463791833,1924.5369370858498,1048.8601256322195,1284.6195889148232),c(259.81976087335556,653.4112511021472,707.7032311635708,4515.086656764152,3467.0167758794564,1296.9501434332028),c(67.99021779863509,258.75085543645025,198.83090780309846,1163.272326352359,593.5952964763312,1169.160760242723),c(337.5228669289385,812.3208673701893,908.5561481985652,6002.365201675002,3099.302875407393,2538.9732712845325),c(0.0,0.0,0.0,0.0,0.0,0.0),c(0.0,0.0,0.6740030772986388,0.750014394811321,0.0,1.1209595016708753),c(2.4282220642369676,3.136374005290306,28.30812924654283,0.0,47.27750148926532,8.967676013367003),c(169.97554449658773,548.8654509258035,506.17631105127776,2963.3068738995294,1297.5047630942815,1818.1963117101598),c(242.82220642369677,607.4110990245559,682.7651173035212,2322.04456633585,3106.306949702099,2342.8053584921295),c(747.892395784986,1379.481833326853,1734.2099178893977,3564.0684041433974,3824.224564909461,6489.234555172698),c(502.6419672970523,756.9115932767272,674.6770803759375,4806.842256345756,4134.1548524502,2479.5624176959764),c(417.6541950487584,664.3885601206632,663.8930311391592,3927.8253856268884,2419.9076688209134,1937.0180188872725),c(585.2015174811092,1102.4354628595427,1099.29901907408,8669.41638962406,5300.333222518745,14629.642456306594))
targetgene="L22L"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(500.2137452328153,798.207184346383,629.5188741969287,1020.769591338208,1103.1417014161907,777.9458941595875),c(983.4299360159719,1246.185938102015,1075.7089113686277,2631.8005113929257,1758.0226479711991,1591.762492372643),c(456.50574807654993,820.1618023834151,523.7003910610424,6240.869779225002,5219.786368129626,6392.8320380290015),c(152.97799004692897,198.114291334171,196.80889857120255,37.500719740566055,269.65686034617994,13.451514020050503),c(77.70310605558296,146.88684924776268,121.32055391375499,971.2686412806607,43.775464341912325,16.81439252506313),c(2.4282220642369676,0.0,1.3480061545972777,72.75139629669815,14.008148589411945,30.265906545113634),c(269.5326491303034,209.6143293535688,152.99869854679102,1245.7739097816043,966.5622526694242,402.4244610998442),c(58.27732954168722,13.068225022042942,58.63826772498158,419.25804669952845,42.024445768235836,100.88635515037878),c(0.0,1.568187002645153,2.0220092318959164,0.0,0.0,0.0),c(2746.31915465201,1262.3905371293483,1453.824637733164,8501.413165186324,7823.550987186572,8910.507078781788),c(60.70555160592419,157.86415826627874,111.21050775427541,577.5110840047172,320.43639898279827,506.67369475523566),c(9.71288825694787,8.886393014989201,6.740030772986389,117.00224559056608,54.28157578397129,160.29720873893518),c(1209.25458799001,1596.414368692766,1413.3844530952456,7898.401591758022,6112.805840704637,6481.387838661001),c(2034.8500898305788,2063.7340954810215,1807.0022502376507,4910.3442428297185,6352.695385298317,4210.323888275808),c(951.8630491808913,1255.5950601178859,1242.1876714613913,1713.0328777490572,4155.167075334319,1910.1149908471716),c(213.68354165285314,373.2285066295464,273.64524938324735,1200.773046092925,872.0072496908936,1527.867800777403),c(332.66642280046455,672.7522241347707,401.0318309926901,1485.0285017264157,1656.4635706979625,1791.2932836700588),c(111.69821495490051,287.5009504849447,160.41273239707604,566.2608680825474,304.6772318197098,549.2701558187289),c(352.0921993143603,511.2289628623199,404.4018463791833,996.7691307042456,966.5622526694242,770.0991776478913),c(509.9266334897632,773.6389213049422,707.0292280862722,2313.0443935981143,2799.8786993087124,3608.3686358785476),c(293.8148697726731,452.1605857626858,392.2697909878078,5647.608392929247,4671.717554568883,5243.848548816355),c(72.84666192710903,54.886545092580356,61.33428003417613,539.2603498693398,616.3585379341256,2607.351800886456),c(325.3817566077537,226.34165738178376,243.31511090480862,3932.3254719957563,7986.395714538486,3349.4269909925756),c(14780.587705010423,6612.521861153729,8024.6806383175945,16632.319219335855,23852.37501062119,10614.365521321519),c(1384.0865766150716,1653.391829788873,1582.559225497204,12292.735930957551,15713.64068017285,13397.707963970302),c(2607.9104969905034,2886.509542868845,3093.0001217234535,31535.105244236805,41246.99352152347,28171.95419599244),c(1313.6681367521994,1434.3683784194334,1524.5949608495212,8649.166000964155,8124.726181858929,7609.073097341901),c(102789.06820121508,34146.226524596445,44131.699492282976,42777.07100806369,73476.24138861301,29924.013897104018),c(10332.084883328298,5071.516766554425,5615.1196369749605,13751.513928865572,24538.774291502374,14050.106393942751),c(2479.214727585944,1596.9370976936475,1504.3748685305618,6489.874558302361,8977.472227239381,9311.81058037996))
targetgene="A347P"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(114.12643701913748,588.5928549928142,505.50230797397916,1914.0367355584913,1033.100958469131,2257.612436365143),c(19.42577651389574,325.66016754931013,256.7951724507814,436.5083777801888,409.7383462402994,1274.5309533997852),c(165.1191003681138,667.5249341259535,497.41427104639547,2732.3024402976425,2733.339993509006,2860.688648264074),c(24.282220642369676,214.31889036150426,167.82676624736106,771.7648122608493,577.8361293132427,569.4474268488046),c(94.70066050524174,705.1614221894372,725.2273111733354,3845.323802197643,4286.493468360055,5479.250044167238),c(41.27977509202845,697.3204871762114,562.7925695443635,2054.2894273882084,707.4115037653032,874.3484113032828),c(155.40621211116593,659.161270111846,642.9989357429015,15403.795640634911,14438.899158536362,12895.51810722175),c(60.70555160592419,489.7970738261695,440.7980125533098,6062.366353259908,6403.474923934936,7286.236760860689),c(82.5595501840569,586.5019389892873,605.2547634141777,2799.05372143585,2087.21413982238,1809.2286356967927),c(14.569332385421806,138.00045623277347,99.07845236289991,285.005470028302,96.30602155220713,272.3931589060227),c(38.85155302779148,177.72786029978403,141.54064623271415,136.50261985566044,168.09778307294334,288.08659192941496),c(21.85399857813271,561.9336759478465,370.0276894369527,1063.5204118424533,716.1665966336857,1553.6498693158333),c(55.849107477450254,104.54580017634353,116.60253237266451,18.750359870283027,411.4893648139759,15.693433023392254),c(0.0,0.5227290008817177,0.0,0.0,0.0,1.1209595016708753),c(4.856444128473935,9.931851016752637,12.132055391375498,8.250158342924532,0.0,1.1209595016708753),c(7.284666192710903,20.90916003526871,14.154064623271415,141.00270622452837,78.79583581544219,100.88635515037878),c(2012.9960912524461,2298.9621458777942,2375.860847477702,10221.946186883495,7947.873305917602,6094.656810584549),c(133.5522135330332,181.90969230683777,185.35084625712568,1188.7728157759439,1302.7578188153109,1516.6582057606943),c(0.0,0.5227290008817177,0.6740030772986388,2.250043184433963,1.7510185736764932,2.2419190033417506),c(7.284666192710903,8.363664014107483,6.740030772986389,68.25130992783022,82.29787296279518,84.07196262531565),c(116.55465908337445,160.47780327068733,105.8184831358863,770.2647834712267,154.0896344835314,266.7883613976683),c(910.5832740888628,1091.4581538410266,1134.3471790936092,3502.567223768869,2635.2829533831223,5330.162430445012),c(2.4282220642369676,10.454580017634354,9.436043082180944,29.25056139764152,77.0448172417657,22.419190033417507),c(36.42333096355451,40.250133067892264,37.74417232872378,177.00339717547178,203.1181545464732,141.24089721053028),c(2148.9765268497163,2545.690234293965,2880.0151492970836,6624.877149368399,9958.042628498217,8501.356860671918),c(2.4282220642369676,12.022767020279508,8.762040004882305,23.250446239150953,57.78361293132427,57.16893458521464),c(97.1288825694787,194.455188327999,221.7470124312522,1030.519778470755,593.5952964763312,1854.0670157636278),c(206.39887546014225,1327.7316622395629,1292.7379022587893,5991.8650001476435,5112.97423513536,5021.898567485521),c(169.97554449658773,906.4120875288985,726.5753173279327,3674.320520180662,4162.1711496290245,5580.136399317617),c(201.54243133166833,1258.2087051222945,1409.3404346314537,11657.473738552362,7604.67366547701,9852.113060185324))
targetgene="R196P"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(26.710442706606642,14.113683023806377,17.52408000976461,287.25551321273593,220.62834028323815,38.11262305680976),c(0.0,0.0,0.0,6.750129553301889,40.273427194559346,34.749744551797136),c(155.40621211116593,85.20482714371998,44.484203101710165,484.5092990481134,635.619742244567,596.3504548889057),c(631.3377367016116,300.5691755069877,279.0372740016365,567.0108824773587,259.150748904121,308.2638629594907),c(2.4282220642369676,5.227290008817177,2.6960123091945554,34.50066216132077,213.62426598853216,301.5381059494655),c(883.8728313822562,621.5247820483623,751.5134311879823,682.5130992783021,845.7419710857462,4197.993333757428),c(230.68109610251193,71.61387312079532,51.22423387469655,279.0053548698114,1255.4803173260457,1001.0168349920916),c(9.71288825694787,6.79547701146233,7.414033850285027,152.25292214669818,64.78768722603024,329.56209349123736),c(48.56444128473935,21.954618037032144,24.938113860049636,871.5167267707551,994.5785498482481,75.10428661194865),c(2544.776723320342,1116.549145883349,1332.504083819409,5154.84893553821,7420.816715240978,4958.003875890282),c(7.284666192710903,5.227290008817177,2.0220092318959164,62.25119476933965,78.79583581544219,97.52347664536616),c(1291.8141381740668,503.9107568499759,668.6110526802497,4405.5845551217,8593.99915960423,3972.6804739215822))
targetgene="N239T"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(390.9437523421518,657.0703541083192,557.4005449259744,1461.0280410924533,744.1828938125096,1497.6018942322894),c(881.4446093180193,1127.526454901865,964.4984036143521,2431.5466679783026,2055.695805496203,1536.8354767907701),c(687.1868441790618,1026.1170287308119,795.9976342896924,785.2650713674532,1311.5129116836933,1460.6102306771506),c(2059.1323104729486,2245.1210587869773,2142.6557827323727,4298.332496663681,4922.1132106046225,5312.227078418278),c(1272.388361660171,1611.5735097183356,1435.6265546461007,3389.3150501523596,2794.625643587683,4966.971551903649),c(441.9364156911281,791.9344363358023,672.6550711440416,3320.3137258297184,1607.4350506350206,2116.3715391546125),c(65.56199573439812,38.15921706436539,109.18849852237949,25.500489423584916,294.1711203776508,113.2169096687584),c(4.856444128473935,6.79547701146233,2.0220092318959164,9.000172737735852,14.008148589411945,17.935352026734005),c(80.13132811981993,181.90969230683777,138.8446339235196,11.250215922169815,28.01629717882389,928.1544673834848),c(228.25287403827497,333.5011025625359,250.055141677795,2303.2942064655667,1099.6396642688378,1551.4079503124915),c(167.54732243235077,72.65933112255875,103.79647390399037,805.5154600273588,103.3100958469131,4.483838006683501),c(2.4282220642369676,7.3182060123440476,0.6740030772986388,8.250158342924532,1.7510185736764932,0.0),c(849.8777224829387,999.980578686726,1074.3609052140303,2316.0444511773594,3218.3721384173946,2661.157856966658),c(896.0139417034411,1032.3897767413926,1210.5095268283553,3294.8132364061335,2579.2503590254746,2803.5197136788593),c(1767.7456627645124,1868.233449151259,1977.5250287942063,2646.0507848943407,3200.8619526806297,4412.096598576565),c(354.5204213785973,654.9794381047923,463.7141171814635,696.7633727797172,222.37935885691462,726.3817570827272),c(131.12399146879625,202.29612334122476,168.5007693246597,339.0065064547171,259.150748904121,674.817620005867),c(106.84177082642657,312.06921352638545,179.95882163873657,234.00449118113215,323.9384361301512,666.9709034941708),c(254.9633167448816,561.4109469469648,391.59578791050916,1058.270311078774,407.9873276666229,645.6726729624241),c(471.0750804619717,796.6389973437377,549.9865110756894,1925.2869514806612,2132.740622737969,2123.097296164638),c(118.98288114761141,260.84177143997715,221.07300935395355,876.7668275344342,1027.8479027481014,950.5736574169023),c(184.54487688200953,169.36419628567654,159.7387293197774,369.75709664198126,295.9221389513273,1897.784436328792),c(2598.197608733555,1281.20878116109,1470.67471466563,6582.126328864153,3594.8411317578407,3767.544885115812),c(7.284666192710903,18.818244031741838,15.502070777868694,143.25274940896233,57.78361293132427,127.78938319047978),c(14.569332385421806,4.704561007935459,11.45805231407686,756.0145099698116,246.89361888838553,335.1668909995917),c(6835.445110827064,3000.9871940619414,3785.2012821091557,10649.454391925947,9467.757427868799,10194.00570819494),c(84.98777224829387,77.36389213049422,97.73044620830264,324.756232953302,565.5789992975073,2014.364224502563),c(55.849107477450254,46.52288107847288,44.484203101710165,963.0184829377362,7046.098740474208,1319.3693334666202),c(905.726829960389,415.56955570096557,572.902615703843,4557.837477268398,2866.417405108419,8214.391228244174),c(27307.785334408938,10236.602024266678,14029.374053971167,18796.11074836652,54666.79987018012,15058.969945446539))
targetgene="E346Ter"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(274.38909325877734,303.18282051139624,504.1543018193818,8433.161855258493,9339.933071990414,8180.7624431940485),c(505.0701893612893,270.77362245672975,399.0098217607942,4211.330826865567,7571.404312577157,4382.9516515331225),c(128.6957694045593,251.43264942410622,277.6892678470392,3331.5639417518883,2166.009975637822,11262.280113287285),c(206.39887546014225,262.932687443504,289.8213232384147,2481.04761803585,3409.2331629481323,4051.1476390385433),c(101.98532669795264,120.75039920367679,230.50905243613448,1758.0337414377366,1106.6437385635436,377.763352063085),c(77.70310605558296,142.18228823982722,82.22837543043394,38.25073413537737,36.77139004720635,252.21588787594695),c(101.98532669795264,136.43226923012833,127.38658160944274,395.2575860655662,7525.877829661567,399.06158259483163),c(286.5302035799622,338.7283925713531,254.09916014158685,1600.530718527359,3456.5106644373973,1787.930405165046),c(145.69332385421805,218.500722368558,140.86664315541552,84.00161221886796,61.285650078677264,33.62878505012626),c(993.1428242729197,2334.5077179377513,2544.361616802362,27475.277325123123,21849.209762335282,21663.663329291336),c(420.0824171129954,612.6383890333732,592.4487049455036,19748.629029776894,10397.548290491017,10542.624113214582),c(19.42577651389574,110.81854818692415,111.21050775427541,1570.5301427349063,4261.979208328585,2642.101545438253),c(670.1892897294031,326.7056255510736,318.80345556225615,341.25654963915105,362.4608447510341,480.8916262168055),c(19.42577651389574,13.59095402292466,20.894095396257804,34.50066216132077,14.008148589411945,21.298230531746633),c(80.13132811981993,70.56841511903188,21.568098473556443,8.250158342924532,28.01629717882389,19.05631152840488),c(2095.5556414365033,6556.067129058503,8208.683478420122,38465.23825229341,36718.85948999606,35663.3265456589),c(7947.570816247595,25065.378321279244,31248.804672796792,139123.1701511312,332115.69286922045,197663.27276763212),c(1444.7921282209957,4614.128890782922,5186.453679813026,17646.33868112076,17616.997869759198,17486.968226065655),c(0.0,6.79547701146233,1.3480061545972777,5.250100763679248,3.5020371473529863,1.1209595016708753),c(189.40132101048349,35.022843059075086,74.14033850285027,56.251079610849075,28.01629717882389,2791.1891591604794),c(7.284666192710903,6.272748010580612,2.6960123091945554,7.500143948113211,59.53463150500077,2.2419190033417506),c(21.85399857813271,6.272748010580612,19.546089241660525,40.500777319811334,17.51018573676493,38.11262305680976),c(174.83198862506168,89.90938815165545,43.136196947112886,16.500316685849064,8.755092868382466,7.846716511696127),c(274.38909325877734,130.1595212195477,195.46089241660528,144.75277819858496,87.55092868382465,131.1522616954924),c(420.0824171129954,226.34165738178376,219.05100012205762,190.50365628207555,164.59574592559036,130.03130219382155),c(94.70066050524174,52.795629089053485,62.008283111474775,1328.2754932108496,0.0,4.483838006683501),c(16.99755444965877,18.818244031741838,8.088036927583666,11.250215922169815,0.0,31.386866046784508),c(7.284666192710903,5.750019009698895,7.414033850285027,12.000230316981137,45.52648291558882,8.967676013367003),c(908.1550520246259,529.0017488922983,609.2987818779695,214.50411691603782,287.16704608294486,773.462056152904),c(220.96820784556405,95.13667816047263,97.05644313100399,12.000230316981137,28.01629717882389,16.81439252506313))
targetgene="I255F"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%


<<fig=TRUE,echo=FALSE,width=4.5,height=4.5>>=
par(mfrow=c(2,2));

# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(65.56199573439812,52.795629089053485,37.070169251425135,3.7500719740566053,12.257130015735452,8.967676013367003),c(330.2382007362276,112.38673518956931,179.95882163873657,12.000230316981137,1218.7089272788392,35.87070405346801),c(41.27977509202845,90.43211715253716,146.93267085110327,12.750244711792458,1789.540982297376,1218.4829783162415),c(383.6590861494409,164.65963527774107,305.3233940162834,10436.450303799533,15002.727139260194,4978.181146920358),c(422.51063917723235,233.1371343932461,196.1348954939039,1382.2765296372647,9691.88780529939,6731.361807533606),c(135.98043559727017,208.04614235092365,166.4787600927638,865.5166116122645,386.975104782505,807.0908412030302),c(148.121545918455,148.97776525128955,79.53236312123938,165.75318125330196,52.530557210294795,41.475501561822384),c(233.1093181667489,133.81862422571973,210.28896011717532,2079.7899168117933,5342.357668286981,555.9959128287542),c(534.2088541321328,225.81892838090204,343.06756634500715,360.0069095094341,2362.1240558895893,236.5224548525547),c(4550.488148380077,6405.521176804568,7862.9198997659205,28995.55650340567,72212.00597841857,37512.90972341584),c(405.5130847275736,640.8657550809859,583.6866649406212,13884.266476747174,8287.570909210843,3656.569894450395),c(162.69087830387684,287.5009504849447,230.50905243613448,4146.079574516983,2537.2259132572385,2878.624000290808),c(7578.481062483576,21552.639435354104,25553.478669623295,187535.84932180715,240469.1317415665,143064.6983197488),c(3841.4473056228826,9411.212931874445,10559.606212037776,26111.75115535614,55365.45628107704,26750.57754787377),c(1500.641235698446,3416.5567497629067,3835.7515129065537,11572.722111938683,16569.888762700655,14709.230580925227),c(84.98777224829387,36.59103006172024,50.550230797397916,6.000115158490568,28.01629717882389,54.927015581872894),c(12.141110321184838,2.090916003526871,3.3700153864931943,0.0,7.004074294705973,3.3628785050126258),c(551.2064085817916,243.59171441088046,455.6260802538799,99.7519145099057,143.58352304147243,146.84569471888466))
targetgene="I254TfsTer91"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



# parameters
# Do not modify the variables beginning with "__"
targetmat=list(c(4637.904142692608,1872.9380101591946,4188.255122333741,11992.730173033024,8564.231843851729,9974.29764586745),c(2134.4071944642947,1148.4356149371338,1811.720271778741,2243.293054880661,3169.3436183544527,4664.3124864525125),c(1928.0083190041523,973.84412864264,1405.9704192449606,6492.874615881607,3424.992330111221,3102.815900624983),c(4426.648823103992,1589.6188916813035,3523.6880881172838,12179.483757341042,4284.7424497863785,13186.967577656178),c(2690.47004717456,2025.574878416656,2092.7795550122737,3565.56843293302,9581.57363515777,4771.924598612916),c(2632.1927176328727,1740.1648439352382,2034.8152903645907,5450.35460709387,2244.805811453264,10723.098592983593),c(2785.170707679802,1157.8447369530047,2687.250269189673,6178.618584455663,11367.612580307794,16344.710493863033),c(420.0824171129954,293.77369849552537,529.0924156794315,1290.0247590754723,752.9379866808921,1984.0983179574494),c(558.4910747745025,340.8193085748799,625.4748557331368,1476.0283289886797,1516.382084803843,3500.756523718144),c(9.71288825694787,51.22744208640833,36.3961661741265,94.50181374622645,29.767315752500384,261.183563889314),c(29.13866477084361,100.36396816928979,71.44432619365571,384.7573845382077,238.13852602000307,309.3848224611616),c(89.8442163767678,306.84192351756826,190.06886779821616,609.0116885867927,630.3666865235375,1172.5236387477355),c(721.1819530783794,647.1385030915665,887.6620528023074,1254.77408251934,1693.2349607451688,2213.895015799979),c(2391.7987332734133,1072.117180808403,1658.0475701546516,10764.95660872689,6741.421508654499,5973.593184404094),c(592.48618367382,488.75161582440603,585.7086741725171,1446.027753196227,1309.761893110017,1744.212984599882))
targetgene="E271_V272insQL*"
collabel=c("D4-REP1","D4-REP2","D4-REP3","D34-NUT-REP1","D34-NUT-REP2","D34-NUT-REP3")

# set up color using RColorBrewer
#library(RColorBrewer)
#colors <- brewer.pal(length(targetgenelist), "Set1")

colors=c( "#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00",  "#A65628", "#F781BF",
          "#999999", "#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", 
          "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072", "#80B1D3", "#FDB462", "#B3DE69", "#FCCDE5",
          "#D9D9D9", "#BC80BD", "#CCEBC5", "#FFED6F")


## code

targetmatvec=unlist(targetmat)+1
yrange=range(targetmatvec[targetmatvec>0]);
# yrange[1]=1; # set the minimum value to 1
for(i in 1:length(targetmat)){
  vali=targetmat[[i]]+1;
  if(i==1){
    plot(1:length(vali),vali,type='b',las=1,pch=20,main=paste('sgRNAs in',targetgene),ylab='Read counts',xlab='Samples',xlim=c(0.7,length(vali)+0.3),ylim = yrange,col=colors[(i %% length(colors))],xaxt='n',log='y')
    axis(1,at=1:length(vali),labels=(collabel),las=2)
    # lines(0:100,rep(1,101),col='black');
  }else{
    lines(1:length(vali),vali,type='b',pch=20,col=colors[(i %% length(colors))])
  }
}



par(mfrow=c(1,1));
@
%__INDIVIDUAL_PAGE__









\end{document}

